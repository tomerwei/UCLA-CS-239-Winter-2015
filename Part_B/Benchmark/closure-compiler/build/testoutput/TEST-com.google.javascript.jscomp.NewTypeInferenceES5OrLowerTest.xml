<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="6" failures="67" hostname="cs-210-206.cs.ucla.edu" name="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" skipped="0" tests="261" time="3.444" timestamp="2015-03-09T03:17:29">
  <properties>
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="lib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib" />
    <property name="refasterjs-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="os.name" value="Mac OS X" />
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/classes" />
    <property name="maven-repository-id" value="sonatype-nexus-staging" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.home" value="//Users/linmanna/ant" />
    <property name="java.runtime.version" value="1.7.0_75-b13" />
    <property name="gen.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/gen" />
    <property name="user.name" value="linmanna" />
    <property name="ant.file.compiler" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="ant.build.javac.target" value="1.7" />
    <property name="user.language" value="zh" />
    <property name="test.method" value="" />
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib" />
    <property name="ant.project.default-target" value="jar" />
    <property name="ant.project.name" value="compiler" />
    <property name="java.version" value="1.7.0_75" />
    <property name="user.timezone" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/endorsed" />
    <property name="sun.cpu.isalist" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="file.separator" value="/" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="protoc.executable" value="protoc" />
    <property name="classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes" />
    <property name="java.class.version" value="51.0" />
    <property name="testClasses.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test" />
    <property name="user.country" value="CN" />
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="externs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/externs" />
    <property name="ant.file" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="os.version" value="10.9.5" />
    <property name="javac.debug" value="on" />
    <property name="path.separator" value=":" />
    <property name="java.vm.version" value="24.75-b04" />
    <property name="ant.library.dir" value="//Users/linmanna/ant/lib" />
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob" />
    <property name="webservice-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="test.fork" value="true" />
    <property name="webservice.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/jscomp/webservice" />
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit" />
    <property name="buildlib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/lib" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ant.build.javac.source" value="1.7" />
    <property name="refasterjs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/refactoring" />
    <property name="user.home" value="/Users/linmanna" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/test" />
    <property name="java.library.path" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="gopherProxySet" value="false" />
    <property name="build.relVersion" value="00e3533" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junittestcases4622356093930181862.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false formatter=org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter showoutput=true outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/testoutput/IGNORETHIS.xml crashfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junitvmwatcher882389895192408063.properties propsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junit6374663990081372210.properties" />
    <property name="java.class.path" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant-launcher.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/args4j.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/gson.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/guava.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/jsr305.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/junit.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/protobuf-java.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/truth.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test:/Users/linmanna/ant/lib/ant-launcher.jar:/Users/linmanna/ant/lib/ant.jar:/Users/linmanna/ant/lib/ant-junit.jar:/Users/linmanna/ant/lib/ant-junit4.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.4 compiled on April 29 2014" />
    <property name="test.class" value="*Test" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.file.type" value="file" />
    <property name="java.vm.specification.version" value="1.7" />
    <property name="sun.cpu.endian" value="little" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="java.io.tmpdir" value="/var/folders/_p/3swdt4h96dn79vyt21dtny9h0000gn/T/" />
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/" />
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment" />
    <property name="maven-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <property name="os.arch" value="x86_64" />
    <property name="webservice-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice-classes" />
    <property name="java.ext.dirs" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java" />
    <property name="user.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.file.type.compiler" value="file" />
    <property name="line.separator" value="&#xa;" />
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM" />
    <property name="refasterjs-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs-classes" />
    <property name="basedir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.java.version" value="1.7" />
    <property name="ant.core.lib" value="/Users/linmanna/ant/lib/ant.jar" />
    <property name="file.encoding" value="UTF-8" />
    <property name="closure.build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="compiler-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/compiler.jar" />
    <property name="java.specification.version" value="1.7" />
    <property name="src.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src" />
    <property name="ant.project.invoked-targets" value="clean,compile,compile-tests,test" />
    <property name="javadoc.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/javadoc" />
    <property name="tools.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/tools" />
  </properties>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionBind" time="0.139" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTryCatch" time="0.022" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testExterns" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testForIn" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 11, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 11, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testForIn(NewTypeInferenceES5OrLowerTest.java:4781)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testThrow" time="0.019" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testVarDefinitionsInExterns" time="0.037" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeclaredVariables" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testThisInAtTypeFunction" time="0.06" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testThisInFunctionJsdoc" time="0.016" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDontCallMethodAsFunction" time="0.012">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 4 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 4 : 4]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDontCallMethodAsFunction(NewTypeInferenceES5OrLowerTest.java:183)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNewInFunctionJsdoc" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInvalidThisReference" time="0.012" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSuperClassWithUndeclaredProps" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInheritMethodFromParent" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSubClassWithUndeclaredProps" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUseBeforeDeclaration" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEmptyBlockPropagation" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testForLoopInference" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : number&#xa;right side : string&#xa; at [testcode] line 3 : 2, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function .&#xa;expected : string&#xa;found    : number&#xa; at [testcode] line 6 : 30]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : number
right side : string
 at [testcode] line 3 : 2, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function .
expected : string
found    : number
 at [testcode] line 6 : 30]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testForLoopInference(NewTypeInferenceES5OrLowerTest.java:347)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConditionalSpecialization" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 5 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 5 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 2]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testConditionalSpecialization(NewTypeInferenceES5OrLowerTest.java:381)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnspecializedStrictComparisons" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAndOrConditionalSpecialization" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 5 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 5 : 2, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 2]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAndOrConditionalSpecialization(NewTypeInferenceES5OrLowerTest.java:427)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLoopConditionSpecialization" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testLoopConditionSpecialization(NewTypeInferenceES5OrLowerTest.java:521)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testVarDecls" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MULTIPLE_VAR_DEF: declaration of multiple variables with shared type information]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_MULTIPLE_VAR_DEF. declaration of multiple variables with shared type information at [testcode] line 1 : 22, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 26, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 29]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MULTIPLE_VAR_DEF: declaration of multiple variables with shared type information]================================================================
but found:
----------------------------------------------------------------
[JSC_MULTIPLE_VAR_DEF. declaration of multiple variables with shared type information at [testcode] line 1 : 22, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 26, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 29]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testVarDecls(NewTypeInferenceES5OrLowerTest.java:542)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testBadInitialization" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testBadAssignment" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 26, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 1 : 29, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : string&#xa;right side : number&#xa; at [testcode] line 1 : 29]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 26, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 1 : 29, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : string
right side : number
 at [testcode] line 1 : 29]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testBadAssignment(NewTypeInferenceES5OrLowerTest.java:560)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testBadArithmetic" time="0.035">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.&#xa;expected : {1}&#xa;found    : {2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 17, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator SUB.&#xa;expected : number&#xa;found    : undefined&#xa; at [testcode] line 1 : 28]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.
expected : {1}
found    : {2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 17, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator SUB.
expected : number
found    : undefined
 at [testcode] line 1 : 28]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testBadArithmetic(NewTypeInferenceES5OrLowerTest.java:578)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTypeAfterIF" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.&#xa;expected : {1}&#xa;found    : {2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator SUB.&#xa;expected : number&#xa;found    : number|string&#xa; at [testcode] line 1 : 26]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.
expected : {1}
found    : {2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator SUB.
expected : number
found    : number|string
 at [testcode] line 1 : 26]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testTypeAfterIF(NewTypeInferenceES5OrLowerTest.java:590)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleBwdPropagation" time="0.013">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 20, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.&#xa;expected : number&#xa;found    : string&#xa; at [testcode] line 2 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 20, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.
expected : number
found    : string
 at [testcode] line 2 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testSimpleBwdPropagation(NewTypeInferenceES5OrLowerTest.java:608)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleReturn" time="0.033">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 20, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : undefined&#xa;right side : number&#xa; at [testcode] line 1 : 70]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 20, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : undefined
right side : number
 at [testcode] line 1 : 70]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testSimpleReturn(NewTypeInferenceES5OrLowerTest.java:653)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testComparisons" time="0.027">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.&#xa;expected : {1}&#xa;found    : {2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 15, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.&#xa;expected : matching scalar types&#xa;found    : number, number|string&#xa; at [testcode] line 1 : 37]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.
expected : {1}
found    : {2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 15, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.
expected : matching scalar types
found    : number, number|string
 at [testcode] line 1 : 37]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testComparisons(NewTypeInferenceES5OrLowerTest.java:669)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionJsdoc" time="0.102">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 7 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 7 : 4]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testFunctionJsdoc(NewTypeInferenceES5OrLowerTest.java:772)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionSubtyping" time="0.02" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionJoin" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 8 : 6]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 8 : 6]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testFunctionJoin(NewTypeInferenceES5OrLowerTest.java:834)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionMeet" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRecordWithoutTypesJsdoc" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testBackwardForwardPathologicalCase" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTopInitialization" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 20]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 20]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testTopInitialization(NewTypeInferenceES5OrLowerTest.java:903)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleCalls" time="0.039" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testObjectType" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testCallsWithComplexOperator" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeferredChecks" time="0.043" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionsInsideFunctions" time="0.01">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 18, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 2 : 15, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : number&#xa;right side : string&#xa; at [testcode] line 2 : 15]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 18, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 2 : 15, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : number
right side : string
 at [testcode] line 2 : 15]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testFunctionsInsideFunctions(NewTypeInferenceES5OrLowerTest.java:1090)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testCrossScopeWarnings" time="0.005">
    <failure message="Wrong warning type&#xa;Expected warning of type:&#xa;================================================================&#xa;[JSC_CROSS_SCOPE_GOTCHA: You thought we werent going to notice? Guess again.&#xa;Variable &apos;{&apos;0} typed inconsistently across scopes.&#xa;In outer scope : &apos;{&apos;1}&#xa;In inner scope : &apos;{&apos;2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.&#xa;expected : matching scalar types&#xa;found    : number, string&#xa; at [testcode] line 2 : 2]&#xa;----------------------------------------------------------------&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Wrong warning type
Expected warning of type:
================================================================
[JSC_CROSS_SCOPE_GOTCHA: You thought we werent going to notice? Guess again.
Variable &apos;{&apos;0} typed inconsistently across scopes.
In outer scope : &apos;{&apos;1}
In inner scope : &apos;{&apos;2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.
expected : matching scalar types
found    : number, string
 at [testcode] line 2 : 2]
----------------------------------------------------------------

	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:175)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testCrossScopeWarnings(NewTypeInferenceES5OrLowerTest.java:1102)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTrickyUnknownBehavior" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testTrickyUnknownBehavior(NewTypeInferenceES5OrLowerTest.java:1141)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeclaredFunctionTypesInFormals" time="0.018">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.&#xa;expected : {1}&#xa;found    : {2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.&#xa;expected : matching scalar types&#xa;found    : number, string&#xa; at [testcode] line 2 : 22]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.
expected : {1}
found    : {2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.
expected : matching scalar types
found    : number, string
 at [testcode] line 2 : 22]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDeclaredFunctionTypesInFormals(NewTypeInferenceES5OrLowerTest.java:1199)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSpecializedFunctions" time="0.03" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDifficultObjectSpecialization" time="0.017" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLooseConstructors" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLooseFunctions" time="0.057">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 6 : 6, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.&#xa;expected : function(number):number (loose)&#xa;found    : function(number):string&#xa; at [testcode] line 8 : 3]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 6 : 6, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.
expected : function(number):number (loose)
found    : function(number):string
 at [testcode] line 8 : 3]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testLooseFunctions(NewTypeInferenceES5OrLowerTest.java:1458)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testBackwardForwardPathologicalCase2" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.&#xa;expected : {1}&#xa;found    : {2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.&#xa;expected : matching scalar types&#xa;found    : number, string&#xa; at [testcode] line 3 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.
expected : {1}
found    : {2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator LT.
expected : matching scalar types
found    : number, string
 at [testcode] line 3 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testBackwardForwardPathologicalCase2(NewTypeInferenceES5OrLowerTest.java:1489)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNotCallable" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleLocallyDefinedFunction" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testIdentityFunction" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testReturnTypeInferred" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGetpropOnNonObjects" time="0.007">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_PROPERTY_ACCESS_ON_NONOBJECT: Cannot access property {0} of non-object type {1}.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 21, JSC_PROPERTY_ACCESS_ON_NONOBJECT. Cannot access property foo of non-object type undefined. at [testcode] line 2 : 0]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_PROPERTY_ACCESS_ON_NONOBJECT: Cannot access property {0} of non-object type {1}.]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 21, JSC_PROPERTY_ACCESS_ON_NONOBJECT. Cannot access property foo of non-object type undefined. at [testcode] line 2 : 0]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testGetpropOnNonObjects(NewTypeInferenceES5OrLowerTest.java:1552)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNonexistentProperty" time="0.014">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INEXISTENT_PROPERTY: Property {0} never defined on {1}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 16, JSC_INEXISTENT_PROPERTY. Property a never defined on {} at [testcode] line 1 : 20]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INEXISTENT_PROPERTY: Property {0} never defined on {1}]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 16, JSC_INEXISTENT_PROPERTY. Property a never defined on {} at [testcode] line 1 : 20]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testNonexistentProperty(NewTypeInferenceES5OrLowerTest.java:1639)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNullableDereference" time="0.018">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_NULLABLE_DEREFERENCE: Attempt to use nullable type {0}.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_NULLABLE_DEREFERENCE. Attempt to use nullable type function():undefined|null. at [testcode] line 1 : 34]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_NULLABLE_DEREFERENCE: Attempt to use nullable type {0}.]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_NULLABLE_DEREFERENCE. Attempt to use nullable type function():undefined|null. at [testcode] line 1 : 34]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testNullableDereference(NewTypeInferenceES5OrLowerTest.java:1667)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAsserts" time="0.011">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;null&#xa;  Node(EXPR_RESULT): [testcode]:6:2&#xa;  o.p(&apos;str&apos;);&#xa;  Parent(BLOCK): [testcode]:4:26&#xa;           /** ?Foo */ o) {&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(EXPR_RESULT): [testcode]:6:2
  o.p(&apos;str&apos;);
  Parent(BLOCK): [testcode]:4:26
           /** ?Foo */ o) {

	at com.google.common.base.Preconditions.checkState(Preconditions.java:158)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.addUnknownTypeNames(GlobalTypeInfo.java:1913)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.access$1000(GlobalTypeInfo.java:1819)
	at com.google.javascript.jscomp.GlobalTypeInfo$CollectNamedTypes.visit(GlobalTypeInfo.java:622)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:289)
	at com.google.javascript.jscomp.GlobalTypeInfo.process(GlobalTypeInfo.java:291)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.parseAndTypeCheck(NewTypeInferenceTestBase.java:143)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:157)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAsserts(NewTypeInferenceES5OrLowerTest.java:1747)
Caused by: java.lang.IllegalStateException
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDontInferBottom" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 34, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 1 : 38, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : string&#xa;right side : number&#xa; at [testcode] line 1 : 38]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 34, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 1 : 38, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : string
right side : number
 at [testcode] line 1 : 38]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDontInferBottom(NewTypeInferenceES5OrLowerTest.java:1771)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAssignToInvalidObject" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_PROPERTY_ACCESS_ON_NONOBJECT: Cannot access property {0} of non-object type {1}.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_PROPERTY_ACCESS_ON_NONOBJECT. Cannot access property foo of non-object type undefined. at [testcode] line 1 : 0, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 15]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_PROPERTY_ACCESS_ON_NONOBJECT: Cannot access property {0} of non-object type {1}.]================================================================
but found:
----------------------------------------------------------------
[JSC_PROPERTY_ACCESS_ON_NONOBJECT. Cannot access property foo of non-object type undefined. at [testcode] line 1 : 0, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 15]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAssignToInvalidObject(NewTypeInferenceES5OrLowerTest.java:1778)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAssignmentDoesntFlowWrongInit" time="0.013" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPossiblyNonexistentProperties" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeclaredRecordTypes" time="0.047">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 14, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 30]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 14, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 30]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDeclaredRecordTypes(NewTypeInferenceES5OrLowerTest.java:1914)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleObjectLiterals" time="0.031" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferPreciseTypeWithDeclaredUnknown" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleLooseObjects" time="0.024" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNestedLooseObjects" time="0.021">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 3, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.&#xa;expected : struct{x:number} (loose)&#xa;found    : {x:string}&#xa; at [testcode] line 6 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 3, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.
expected : struct{x:number} (loose)
found    : {x:string}
 at [testcode] line 6 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testNestedLooseObjects(NewTypeInferenceES5OrLowerTest.java:2079)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLooseObjectSubtyping" time="0.032" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnionOfRecords" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnionOfFunctionAndNumber" time="0.009">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_NOT_FUNCTION_TYPE: {0} expressions are not callable, JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_NOT_FUNCTION_TYPE. function(number):undefined|number expressions are not callable at [testcode] line 1 : 48, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function x.&#xa;expected : number&#xa;found    : string&#xa; at [testcode] line 1 : 50]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;2&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_NOT_FUNCTION_TYPE: {0} expressions are not callable, JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_NOT_FUNCTION_TYPE. function(number):undefined|number expressions are not callable at [testcode] line 1 : 48, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function x.
expected : number
found    : string
 at [testcode] line 1 : 50]
----------------------------------------------------------------
Warning count expected:&lt;2&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testUnionOfFunctionAndNumber(NewTypeInferenceES5OrLowerTest.java:2210)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAnonymousNominalType" time="0.007">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_ANONYMOUS_NOMINAL_TYPE: Must specify a name when defining a class or interface.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_ANONYMOUS_NOMINAL_TYPE. Must specify a name when defining a class or interface. at [testcode] line 4 : 10, JSC_INEXISTENT_PROPERTY. Property Foo never defined on {} at [testcode] line 5 : 5]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_ANONYMOUS_NOMINAL_TYPE: Must specify a name when defining a class or interface.]================================================================
but found:
----------------------------------------------------------------
[JSC_ANONYMOUS_NOMINAL_TYPE. Must specify a name when defining a class or interface. at [testcode] line 4 : 10, JSC_INEXISTENT_PROPERTY. Property Foo never defined on {} at [testcode] line 5 : 5]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAnonymousNominalType(NewTypeInferenceES5OrLowerTest.java:2223)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFoo" time="0.019">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;null&#xa;  Node(EXPR_RESULT): [testcode]:6:16&#xa;function f(x) { x.method(&apos;asdf&apos;); }&#xa;  Parent(BLOCK): [testcode]:6:14&#xa;function f(x) { x.method(&apos;asdf&apos;); }&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(EXPR_RESULT): [testcode]:6:16
function f(x) { x.method(&apos;asdf&apos;); }
  Parent(BLOCK): [testcode]:6:14
function f(x) { x.method(&apos;asdf&apos;); }

	at com.google.common.base.Preconditions.checkState(Preconditions.java:158)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.addUnknownTypeNames(GlobalTypeInfo.java:1913)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.access$1000(GlobalTypeInfo.java:1819)
	at com.google.javascript.jscomp.GlobalTypeInfo$CollectNamedTypes.visit(GlobalTypeInfo.java:622)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:289)
	at com.google.javascript.jscomp.GlobalTypeInfo.process(GlobalTypeInfo.java:291)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.parseAndTypeCheck(NewTypeInferenceTestBase.java:143)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:157)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testFoo(NewTypeInferenceES5OrLowerTest.java:2260)
Caused by: java.lang.IllegalStateException
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testComma" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 1 : 30, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : string&#xa;right side : number&#xa; at [testcode] line 1 : 30]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 1 : 30, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : string
right side : number
 at [testcode] line 1 : 30]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testComma(NewTypeInferenceES5OrLowerTest.java:2271)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTypeof" time="0.007">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.&#xa;expected : string&#xa;found    : number&#xa; at [testcode] line 5 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.
expected : string
found    : number
 at [testcode] line 5 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testTypeof(NewTypeInferenceES5OrLowerTest.java:2287)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAssignWithOp" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 7, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.&#xa;expected : number&#xa;found    : string&#xa; at [testcode] line 5 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 3 : 7, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.
expected : number
found    : string
 at [testcode] line 5 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAssignWithOp(NewTypeInferenceES5OrLowerTest.java:2458)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testClassConstructor" time="0.035" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPropertyDeclarations" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPrototypePropertyAssignments" time="0.034" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAssignmentsToPrototype" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConflictingPropertyDefinitions" time="0.027" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPrototypeAliasing" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInstanceof" time="0.034" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionsExtendFunction" time="0.004">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;null&#xa;  Node(EXPR_RESULT): [testcode]:2:37&#xa;  if (x instanceof Function) { x(1); x(&apos;str&apos;) }&#xa;  Parent(BLOCK): [testcode]:2:29&#xa;  if (x instanceof Function) { x(1); x(&apos;str&apos;) }&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(EXPR_RESULT): [testcode]:2:37
  if (x instanceof Function) { x(1); x(&apos;str&apos;) }
  Parent(BLOCK): [testcode]:2:29
  if (x instanceof Function) { x(1); x(&apos;str&apos;) }

	at com.google.common.base.Preconditions.checkState(Preconditions.java:158)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.addUnknownTypeNames(GlobalTypeInfo.java:1913)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.access$1000(GlobalTypeInfo.java:1819)
	at com.google.javascript.jscomp.GlobalTypeInfo$CollectNamedTypes.visit(GlobalTypeInfo.java:622)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:289)
	at com.google.javascript.jscomp.GlobalTypeInfo.process(GlobalTypeInfo.java:291)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.parseAndTypeCheck(NewTypeInferenceTestBase.java:143)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:157)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testFunctionsExtendFunction(NewTypeInferenceES5OrLowerTest.java:2865)
Caused by: java.lang.IllegalStateException
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testObjectsAreNotClassy" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionWithProps" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstructorProperties" time="0.021" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTypeTighteningHeuristic" time="0.01">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.&#xa;expected : {1}&#xa;found    : {2}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator SUB.&#xa;expected : number&#xa;found    : number|string&#xa; at [testcode] line 8 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_OPERAND_TYPE: Invalid type(s) for operator {0}.
expected : {1}
found    : {2}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_INVALID_OPERAND_TYPE. Invalid type(s) for operator SUB.
expected : number
found    : number|string
 at [testcode] line 8 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testTypeTighteningHeuristic(NewTypeInferenceES5OrLowerTest.java:2985)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeclaredPropertyIndirectly" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNonRequiredArguments" time="0.002">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 13, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 13, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testNonRequiredArguments(NewTypeInferenceES5OrLowerTest.java:3008)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferredOptionalFormals" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSimpleClassInheritance" time="0.035" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInheritanceSubtyping" time="0.027" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInheritanceImplicitObjectSubtyping" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRecordtypeSubtyping" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testWarnAboutOverridesNotVisibleDuringGlobalTypeInfo" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInvalidMethodPropertyOverride" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testMultipleObjects" time="0.025" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testMultipleFunctionsInUnion" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPrototypeOnNonCtorFunction" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInvalidTypeReference" time="0.002">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_UNRECOGNIZED_TYPE_NAME: Type annotation references non-existent type {0}.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_UNRECOGNIZED_TYPE_NAME. Type annotation references non-existent type gibberish. at [testcode] line 1 : 11, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 29]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_UNRECOGNIZED_TYPE_NAME: Type annotation references non-existent type {0}.]================================================================
but found:
----------------------------------------------------------------
[JSC_UNRECOGNIZED_TYPE_NAME. Type annotation references non-existent type gibberish. at [testcode] line 1 : 11, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 29]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testInvalidTypeReference(NewTypeInferenceES5OrLowerTest.java:3673)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testCircularDependencies" time="0.02" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInterfaceNonEmptyFunction" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInterfaceMistypedProp" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInterfaceSingleInheritance" time="0.032" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInterfaceMultipleInheritanceNoCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInterfaceArgument" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;null&#xa;  Node(EXPR_RESULT): [testcode]:6:18&#xa;function foo(x) { x.method(&apos;asdf&apos;); }&#xa;  Parent(BLOCK): [testcode]:6:16&#xa;function foo(x) { x.method(&apos;asdf&apos;); }&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(EXPR_RESULT): [testcode]:6:18
function foo(x) { x.method(&apos;asdf&apos;); }
  Parent(BLOCK): [testcode]:6:16
function foo(x) { x.method(&apos;asdf&apos;); }

	at com.google.common.base.Preconditions.checkState(Preconditions.java:158)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.addUnknownTypeNames(GlobalTypeInfo.java:1913)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.access$1000(GlobalTypeInfo.java:1819)
	at com.google.javascript.jscomp.GlobalTypeInfo$CollectNamedTypes.visit(GlobalTypeInfo.java:622)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:289)
	at com.google.javascript.jscomp.GlobalTypeInfo.process(GlobalTypeInfo.java:291)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.parseAndTypeCheck(NewTypeInferenceTestBase.java:143)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:157)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testInterfaceArgument(NewTypeInferenceES5OrLowerTest.java:3901)
Caused by: java.lang.IllegalStateException
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testExtendedInterfacePropertiesCompatibility" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTwoLevelExtendedInterface" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstructorExtensions" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInterfaceAndConstructorInvalidConstructions" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNot" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testNot(NewTypeInferenceES5OrLowerTest.java:4045)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNullability" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGetElem" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNamespaces" time="0.032" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNestedNamespaces" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNonnamespaceLooksLikeANamespace" time="0.013" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNamespacedObjectsDontCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRedeclaredNamespaces" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testReferenceToNonexistentNamespace" time="0.017" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testQnameInJsdoc" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testIncrementDecrements" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNonStringComparisons" time="0.035" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAnalyzeLoopsBwd" time="0.012" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDontLoosenNominalTypes" time="0.003">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 44]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 44]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDontLoosenNominalTypes(NewTypeInferenceES5OrLowerTest.java:4575)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionsWithAbnormalExit" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAssignAdd" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 2, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.&#xa;expected : number&#xa;found    : string&#xa; at [testcode] line 6 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 4 : 2, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function f.
expected : number
found    : string
 at [testcode] line 6 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAssignAdd(NewTypeInferenceES5OrLowerTest.java:4614)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTypeCoercions" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSwitch" time="0.035" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testIn" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDelprop" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testArrayLit" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testArrayAccesses" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRegExpLit" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDifficultLvalues" time="0.028" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testQuestionableUnionJsDoc" time="0.002">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_BAD_JSDOC_ANNOTATION: Bad JSDoc annotation. {0}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_BAD_JSDOC_ANNOTATION. Bad JSDoc annotation. This union type is equivalent to &apos;?&apos;. at [testcode] line 1 : 18, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 28]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_BAD_JSDOC_ANNOTATION: Bad JSDoc annotation. {0}]================================================================
but found:
----------------------------------------------------------------
[JSC_BAD_JSDOC_ANNOTATION. Bad JSDoc annotation. This union type is equivalent to &apos;?&apos;. at [testcode] line 1 : 18, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 28]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testQuestionableUnionJsDoc(NewTypeInferenceES5OrLowerTest.java:4954)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGenericsJsdocParsing" time="0.012">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 33]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 33]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testGenericsJsdocParsing(NewTypeInferenceES5OrLowerTest.java:4997)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPolymorphicFunctionInstantiation" time="0.042" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGenericReturnType" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnification" time="0.032" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnifyObjects" time="0.011">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 8 : 6, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function g.&#xa;expected : number|string&#xa;found    : {}&#xa; at [testcode] line 11 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 8 : 6, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function g.
expected : number|string
found    : {}
 at [testcode] line 11 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testUnifyObjects(NewTypeInferenceES5OrLowerTest.java:5389)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionTypeUnifyUnknowns" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInstantiationInsideObjectTypes" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInstantiateInsideFunctionTypes" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPolymorphicFuncallsFromDifferentScope" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testOpacityOfTypeParameters" time="0.016">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 7 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 11 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 7 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 11 : 4]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testOpacityOfTypeParameters(NewTypeInferenceES5OrLowerTest.java:5697)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGenericClassInstantiation" time="0.018">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;null&#xa;  Node(EXPR_RESULT): [testcode]:10:16&#xa;function f(x) { x.method(&apos;asdf&apos;); }&#xa;  Parent(BLOCK): [testcode]:10:14&#xa;function f(x) { x.method(&apos;asdf&apos;); }&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(EXPR_RESULT): [testcode]:10:16
function f(x) { x.method(&apos;asdf&apos;); }
  Parent(BLOCK): [testcode]:10:14
function f(x) { x.method(&apos;asdf&apos;); }

	at com.google.common.base.Preconditions.checkState(Preconditions.java:158)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.addUnknownTypeNames(GlobalTypeInfo.java:1913)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.access$1000(GlobalTypeInfo.java:1819)
	at com.google.javascript.jscomp.GlobalTypeInfo$CollectNamedTypes.visit(GlobalTypeInfo.java:622)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:289)
	at com.google.javascript.jscomp.GlobalTypeInfo.process(GlobalTypeInfo.java:291)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.parseAndTypeCheck(NewTypeInferenceTestBase.java:143)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:157)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testGenericClassInstantiation(NewTypeInferenceES5OrLowerTest.java:5852)
Caused by: java.lang.IllegalStateException
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLooserCheckingForInferredProperties" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInheritanceWithGenerics" time="0.064" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGenericsSubtyping" time="0.044" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGenericsVariance" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferredArrayGenerics" time="0.027" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSpecializedInstanceofCantGoToBottom" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeclaredGenericArrayTypes" time="0.036" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferConstTypeFromGoogGetMsg" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferConstTypeFromGenerics" time="0.014" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDifficultClassGenericsInstantiation" time="0.023" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNominalTypeUnification" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testCasts" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testCasts(NewTypeInferenceES5OrLowerTest.java:6808)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testOverride" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testOverrideNoInitializer" time="0.002">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;null&#xa;  Node(EXPR_RESULT): [testcode]:8:32&#xa;function f(/** !Subintf */ x) { x.method(&apos;asdf&apos;); }&#xa;  Parent(BLOCK): [testcode]:8:30&#xa;function f(/** !Subintf */ x) { x.method(&apos;asdf&apos;); }&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(EXPR_RESULT): [testcode]:8:32
function f(/** !Subintf */ x) { x.method(&apos;asdf&apos;); }
  Parent(BLOCK): [testcode]:8:30
function f(/** !Subintf */ x) { x.method(&apos;asdf&apos;); }

	at com.google.common.base.Preconditions.checkState(Preconditions.java:158)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.addUnknownTypeNames(GlobalTypeInfo.java:1913)
	at com.google.javascript.jscomp.GlobalTypeInfo$Scope.access$1000(GlobalTypeInfo.java:1819)
	at com.google.javascript.jscomp.GlobalTypeInfo$CollectNamedTypes.visit(GlobalTypeInfo.java:622)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:289)
	at com.google.javascript.jscomp.GlobalTypeInfo.process(GlobalTypeInfo.java:291)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.parseAndTypeCheck(NewTypeInferenceTestBase.java:143)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:157)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testOverrideNoInitializer(NewTypeInferenceES5OrLowerTest.java:6864)
Caused by: java.lang.IllegalStateException
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionConstructor" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConditionalExBranch" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGenericInterfaceDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGetpropOnTopDoesntCrash" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testImplementsGenericInterfaceDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeadCodeDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSpecializeFunctionToNominalDoesntCrash" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPrototypeMethodOnUndeclaredDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testFunctionGetpropDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnannotatedBracketAccessDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnknownTypeReferenceDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testBottomPropAccessDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnannotatedFunctionSummaryDoesntCrash" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 20]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 20]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheckCustomExterns(NewTypeInferenceTestBase.java:152)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testUnannotatedFunctionSummaryDoesntCrash(NewTypeInferenceES5OrLowerTest.java:7066)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSpecializeLooseNullDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testOuterVarDefinitionJoinDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUnparameterizedArrayDefinitionDoesntCrash" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInstanceofGenericTypeDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRedeclarationOfFunctionAsNamespaceDoesntCrash" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInvalidEnumDoesntCrash" time="0.007">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_BAD_JSDOC_ANNOTATION: Parse error. {0}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_BAD_JSDOC_ANNOTATION. Bad JSDoc annotation. An enum type cannot be a union type. at [testcode] line 1 : 11, JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 7 : 8]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_BAD_JSDOC_ANNOTATION: Parse error. {0}]================================================================
but found:
----------------------------------------------------------------
[JSC_BAD_JSDOC_ANNOTATION. Bad JSDoc annotation. An enum type cannot be a union type. at [testcode] line 1 : 11, JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 7 : 8]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testInvalidEnumDoesntCrash(NewTypeInferenceES5OrLowerTest.java:7166)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRemoveNonexistentPropDoesntCrash" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDoublyAssignedPrototypeMethodDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTopFunctionAsArgumentDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGetpropDoesntCrash" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLooseFunctionSubtypeDoesntCrash" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 36, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 2 : 0]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 36, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 2 : 0]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testLooseFunctionSubtypeDoesntCrash(NewTypeInferenceES5OrLowerTest.java:7259)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testMeetOfLooseObjAndNamedDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUninhabitableObjectTypeDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testMockedOutConstructorDoesntCrash" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNamespacePropWithNoTypeDoesntCrash" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testArrayLiteralUsedGenericallyDoesntCrash" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSpecializeLooseFunctionDoesntCrash" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGetpropOnPossiblyInexistentPropertyDoesntCrash" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testCtorManipulationDoesntCrash" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAbstractMethodOverrides" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testThisReferenceUsedGenerically" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 7 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 20]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 7 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 20]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testThisReferenceUsedGenerically(NewTypeInferenceES5OrLowerTest.java:7374)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGrandparentTemplatizedDoesntCrash" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDebuggerStatementDoesntCrash" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDeclaredMethodWithoutScope" time="0.029" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDontOverrideNestedPropWithWorseType" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPropNamesWithDot" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testObjLitDeclaredProps" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testCallArgumentsChecked" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRecursiveFunctions" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testStructPropAccess" time="0.029">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_ILLEGAL_PROPERTY_ACCESS: Cannot do {0} access on a {1}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 4 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 4, JSC_ILLEGAL_PROPERTY_ACCESS. Cannot do &apos;[]&apos; access on a struct at [testcode] line 11 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_ILLEGAL_PROPERTY_ACCESS: Cannot do {0} access on a {1}]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 4 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 4, JSC_ILLEGAL_PROPERTY_ACCESS. Cannot do &apos;[]&apos; access on a struct at [testcode] line 11 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testStructPropAccess(NewTypeInferenceES5OrLowerTest.java:7573)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDictPropAccess" time="0.017">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_ILLEGAL_PROPERTY_ACCESS: Cannot do {0} access on a {1}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 4 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 4, JSC_ILLEGAL_PROPERTY_ACCESS. Cannot do &apos;.&apos; access on a dict at [testcode] line 11 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_ILLEGAL_PROPERTY_ACCESS: Cannot do {0} access on a {1}]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 4 : 6, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 4, JSC_ILLEGAL_PROPERTY_ACCESS. Cannot do &apos;.&apos; access on a dict at [testcode] line 11 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDictPropAccess(NewTypeInferenceES5OrLowerTest.java:7672)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testStructWithIn" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_IN_USED_WITH_STRUCT: Cannot use the IN operator with structs]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 9, JSC_IN_USED_WITH_STRUCT. Cannot use the IN operator with structs at [testcode] line 1 : 29]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_IN_USED_WITH_STRUCT: Cannot use the IN operator with structs]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 9, JSC_IN_USED_WITH_STRUCT. Cannot use the IN operator with structs at [testcode] line 1 : 29]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testStructWithIn(NewTypeInferenceES5OrLowerTest.java:7700)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testStructDictSubtyping" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferStructDictFormal" time="0.016" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testStructDictInheritance" time="0.015" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testStructPropCreation" time="0.025">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_ILLEGAL_PROPERTY_CREATION: Cannot add a property to a struct instance after it is constructed.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 6 : 6, JSC_ILLEGAL_PROPERTY_CREATION. Cannot add a property to a struct instance after it is constructed. at [testcode] line 7 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_ILLEGAL_PROPERTY_CREATION: Cannot add a property to a struct instance after it is constructed.]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 6 : 6, JSC_ILLEGAL_PROPERTY_CREATION. Cannot add a property to a struct instance after it is constructed. at [testcode] line 7 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testStructPropCreation(NewTypeInferenceES5OrLowerTest.java:7837)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testMisplacedStructDictAnnotation" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGetters" time="0.003">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_RETURN_NONDECLARED_TYPE: Returned type does not match declared return type.&#xa;declared : {0}&#xa;found    : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_RETURN_NONDECLARED_TYPE. Returned type does not match declared return type.&#xa;declared : string&#xa;found    : number&#xa; at [testcode] line 1 : 44]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_RETURN_NONDECLARED_TYPE: Returned type does not match declared return type.
declared : {0}
found    : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4, JSC_RETURN_NONDECLARED_TYPE. Returned type does not match declared return type.
declared : string
found    : number
 at [testcode] line 1 : 44]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testGetters(NewTypeInferenceES5OrLowerTest.java:7896)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSetters" time="0.003">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_BAD_JSDOC_ANNOTATION: Parse error. {0}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_BAD_JSDOC_ANNOTATION. Bad JSDoc annotation. Cannot declare a return type on a setter at (unknown source) line 1 : 43, JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_BAD_JSDOC_ANNOTATION: Parse error. {0}]================================================================
but found:
----------------------------------------------------------------
[JSC_BAD_JSDOC_ANNOTATION. Bad JSDoc annotation. Cannot declare a return type on a setter at (unknown source) line 1 : 43, JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 1 : 4]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testSetters(NewTypeInferenceES5OrLowerTest.java:7955)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstMissingInitializer" time="0.015" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testMisplacedConstPropertyAnnotation" time="0.011" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstVarsDontReassign" time="0.015" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstPropertiesDontReassign" time="0.03" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstantByConvention" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDontOverrideFinalMethods" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferenceOfConstType" time="0.014">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INEXISTENT_PROPERTY: Property {0} never defined on {1}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 2 : 22, JSC_INEXISTENT_PROPERTY. Property prop never defined on {} at [testcode] line 3 : 22]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INEXISTENT_PROPERTY: Property {0} never defined on {1}]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 2 : 22, JSC_INEXISTENT_PROPERTY. Property prop never defined on {} at [testcode] line 3 : 22]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testInferenceOfConstType(NewTypeInferenceES5OrLowerTest.java:8298)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSuppressions" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTypedefs" time="0.028" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testLends" time="0.042" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumBasicTyping" time="0.018" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumsWithNonScalarDeclaredType" time="0.017" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumBadInitializer" time="0.016" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumPropertiesConstant" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumIllegalRecursion" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumBadDeclaredType" time="0.022" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumsWithGenerics" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumJoinSpecializeMeet" time="0.002">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 4 : 6, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : E&#xa;right side : number&#xa; at [testcode] line 6 : 19]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 4 : 6, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : E
right side : number
 at [testcode] line 6 : 19]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testEnumJoinSpecializeMeet(NewTypeInferenceES5OrLowerTest.java:9043)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumAliasing" time="0.005">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MALFORMED_ENUM: An enum must be initialized to a non-empty object literal.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_MALFORMED_ENUM. An enum must be initialized to a non-empty object literal. at [testcode] line 5 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MALFORMED_ENUM: An enum must be initialized to a non-empty object literal.]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 1 : 4, JSC_MALFORMED_ENUM. An enum must be initialized to a non-empty object literal. at [testcode] line 5 : 4]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testEnumAliasing(NewTypeInferenceES5OrLowerTest.java:9170)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNoDoubleWarnings" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testRecordSpecializeNominalPreservesRequired" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 3 : 4, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function .&#xa;expected : {x:number}&#xa;found    : {x:number=, y:string=}&#xa; at [testcode] line 7 : 35]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 3 : 4, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function .
expected : {x:number}
found    : {x:number=, y:string=}
 at [testcode] line 7 : 35]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testRecordSpecializeNominalPreservesRequired(NewTypeInferenceES5OrLowerTest.java:9255)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGoogIsPredicatesNoSpecializedContext" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGoogIsPredicatesTrue" time="0.007">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 5 : 18, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 7 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 2, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : Foo&#xa;right side : Foo|null|undefined&#xa; at [testcode] line 9 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 5 : 18, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 7 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 9 : 2, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : Foo
right side : Foo|null|undefined
 at [testcode] line 9 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testGoogIsPredicatesTrue(NewTypeInferenceES5OrLowerTest.java:9294)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGoogIsPredicatesFalse" time="0.002">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.&#xa;left side  : {0}&#xa;right side : {1}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 4 : 18, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 2, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.&#xa;left side  : Foo&#xa;right side : Foo|null&#xa; at [testcode] line 8 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;4&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_MISTYPED_ASSIGN_RHS: The right side in the assignment is not a subtype of the left side.
left side  : {0}
right side : {1}
]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 4 : 18, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 6 : 4, JSC_CONST_REASSIGNED. Cannot change the value of a constant. at [testcode] line 8 : 2, JSC_MISTYPED_ASSIGN_RHS. The right side in the assignment is not a subtype of the left side.
left side  : Foo
right side : Foo|null
 at [testcode] line 8 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;4&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testGoogIsPredicatesFalse(NewTypeInferenceES5OrLowerTest.java:9362)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testGoogTypeof" time="0.015" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSuperClassCtorProperty" time="0.019">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INEXISTENT_PROPERTY: Property {0} never defined on {1}]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 3 : 24, JSC_INEXISTENT_PROPERTY. Property superClass_ never defined on {x:string} at [testcode] line 3 : 28]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INEXISTENT_PROPERTY: Property {0} never defined on {1}]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 3 : 24, JSC_INEXISTENT_PROPERTY. Property superClass_ never defined on {x:string} at [testcode] line 3 : 28]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testSuperClassCtorProperty(NewTypeInferenceES5OrLowerTest.java:9523)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAcrossScopeNamespaces" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testQualifiedNamedTypes" time="0.014" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testEnumsAsNamespaces" time="0.017" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testStringMethods" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testOutOfOrderDeclarations" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAbstractMethodsAreTypedCorrectly" time="0.015" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testUseJsdocOfCalleeForUnannotatedFunctionsInArgumentPosition" time="0.034" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNamespacesWithNonEmptyObjectLiteral" time="0.02" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAllTestsShouldHaveDupPropWarnings" time="0.015" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testNominalTypeAliasing" time="0.021">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_EXPECTED_CONSTRUCTOR: Expected constructor name but found {0}., JSC_UNRECOGNIZED_TYPE_NAME: Type annotation references non-existent type {0}.]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_EXPECTED_CONSTRUCTOR. Expected constructor name but found Bar. at [testcode] line 5 : 10, JSC_UNRECOGNIZED_TYPE_NAME. Type annotation references non-existent type Foo. at [testcode] line 6 : 9, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 6 : 16]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;2&gt; but was:&lt;3&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_EXPECTED_CONSTRUCTOR: Expected constructor name but found {0}., JSC_UNRECOGNIZED_TYPE_NAME: Type annotation references non-existent type {0}.]================================================================
but found:
----------------------------------------------------------------
[JSC_EXPECTED_CONSTRUCTOR. Expected constructor name but found Bar. at [testcode] line 5 : 10, JSC_UNRECOGNIZED_TYPE_NAME. Type annotation references non-existent type Foo. at [testcode] line 6 : 9, JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 6 : 16]
----------------------------------------------------------------
Warning count expected:&lt;2&gt; but was:&lt;3&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheckCustomExterns(NewTypeInferenceTestBase.java:152)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testNominalTypeAliasing(NewTypeInferenceES5OrLowerTest.java:9922)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testTypeVariablesVisibleInPrototypeMethods" time="0.017" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testInferConstTypeFromEnumProps" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testForwardDeclarations" time="0.013" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testDontLookupInParentScopeForNamesWithoutDeclaredType" time="0.003">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 4]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 4]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testDontLookupInParentScopeForNamesWithoutDeclaredType(NewTypeInferenceES5OrLowerTest.java:10080)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testSpecializationInPropertyAccesses" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAutoconvertBoxedNumberToNumber" time="0.021" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAutoconvertBoxedStringToString" time="0.006">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 21]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_CONST_WITHOUT_INITIALIZER. Constants must be initialized when they are defined. at [testcode] line 2 : 21]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testAutoconvertBoxedStringToString(NewTypeInferenceES5OrLowerTest.java:10162)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAutoconvertBoxedBooleanToBoolean" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAutoconvertScalarsToBoxedScalars" time="0.019" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testConstructorsCalledWithoutNew" time="0.012" />
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testClosureStyleFunctionBind" time="0.012">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.&#xa;expected : {2}&#xa;found    : {3}&#xa;]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 4, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function g.&#xa;expected : number&#xa;found    : string&#xa; at [testcode] line 3 : 2]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;1&gt; but was:&lt;2&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[JSC_INVALID_ARGUMENT_TYPE: Invalid type for parameter {0} of function {1}.
expected : {2}
found    : {3}
]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 4, JSC_INVALID_ARGUMENT_TYPE. Invalid type for parameter 1 of function g.
expected : number
found    : string
 at [testcode] line 3 : 2]
----------------------------------------------------------------
Warning count expected:&lt;1&gt; but was:&lt;2&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testClosureStyleFunctionBind(NewTypeInferenceES5OrLowerTest.java:10449)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testPlusBackwardInference" time="0.004">
    <failure message="Expected warning of type:&#xa;================================================================&#xa;[]================================================================&#xa;but found:&#xa;----------------------------------------------------------------&#xa;[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]&#xa;----------------------------------------------------------------&#xa;Warning count expected:&lt;0&gt; but was:&lt;1&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Expected warning of type:
================================================================
[]================================================================
but found:
----------------------------------------------------------------
[JSC_COULD_NOT_INFER_CONST_TYPE. All constants must be typed. The compiler could not infer the type of this constant. Please use an explicit type annotation. at [testcode] line 2 : 6]
----------------------------------------------------------------
Warning count expected:&lt;0&gt; but was:&lt;1&gt;
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:172)
	at com.google.javascript.jscomp.NewTypeInferenceTestBase.typeCheck(NewTypeInferenceTestBase.java:147)
	at com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest.testPlusBackwardInference(NewTypeInferenceES5OrLowerTest.java:10474)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.NewTypeInferenceES5OrLowerTest" name="testAndOr" time="0.014" />
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
