<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="16" hostname="cs-210-206.cs.ucla.edu" name="com.google.javascript.jscomp.RemoveUnusedVarsTest" skipped="0" tests="83" time="0.204" timestamp="2015-03-08T21:49:32">
  <properties>
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="lib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib" />
    <property name="refasterjs-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="os.name" value="Mac OS X" />
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/classes" />
    <property name="maven-repository-id" value="sonatype-nexus-staging" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.home" value="//Users/linmanna/ant" />
    <property name="java.runtime.version" value="1.7.0_75-b13" />
    <property name="gen.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/gen" />
    <property name="user.name" value="linmanna" />
    <property name="ant.file.compiler" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="ant.build.javac.target" value="1.7" />
    <property name="user.language" value="zh" />
    <property name="test.method" value="" />
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib" />
    <property name="ant.project.default-target" value="jar" />
    <property name="ant.project.name" value="compiler" />
    <property name="java.version" value="1.7.0_75" />
    <property name="user.timezone" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/endorsed" />
    <property name="sun.cpu.isalist" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="file.separator" value="/" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="protoc.executable" value="protoc" />
    <property name="classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes" />
    <property name="java.class.version" value="51.0" />
    <property name="testClasses.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test" />
    <property name="user.country" value="CN" />
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="externs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/externs" />
    <property name="ant.file" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="os.version" value="10.9.5" />
    <property name="javac.debug" value="on" />
    <property name="path.separator" value=":" />
    <property name="java.vm.version" value="24.75-b04" />
    <property name="ant.library.dir" value="//Users/linmanna/ant/lib" />
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob" />
    <property name="webservice-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="test.fork" value="true" />
    <property name="webservice.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/jscomp/webservice" />
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit" />
    <property name="buildlib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/lib" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ant.build.javac.source" value="1.7" />
    <property name="refasterjs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/refactoring" />
    <property name="user.home" value="/Users/linmanna" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/test" />
    <property name="java.library.path" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="gopherProxySet" value="false" />
    <property name="build.relVersion" value="5107abc" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junittestcases5949901879760027472.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false formatter=org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter showoutput=true outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/testoutput/IGNORETHIS.xml crashfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junitvmwatcher5896012663290099626.properties propsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junit3382148267101857145.properties" />
    <property name="java.class.path" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant-launcher.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/args4j.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/gson.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/guava.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/jsr305.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/junit.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/protobuf-java.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/truth.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test:/Users/linmanna/ant/lib/ant-launcher.jar:/Users/linmanna/ant/lib/ant.jar:/Users/linmanna/ant/lib/ant-junit.jar:/Users/linmanna/ant/lib/ant-junit4.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.4 compiled on April 29 2014" />
    <property name="test.class" value="*Test" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.file.type" value="file" />
    <property name="java.vm.specification.version" value="1.7" />
    <property name="sun.cpu.endian" value="little" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="java.io.tmpdir" value="/var/folders/_p/3swdt4h96dn79vyt21dtny9h0000gn/T/" />
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/" />
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment" />
    <property name="maven-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <property name="os.arch" value="x86_64" />
    <property name="webservice-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice-classes" />
    <property name="java.ext.dirs" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java" />
    <property name="user.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.file.type.compiler" value="file" />
    <property name="line.separator" value="&#xa;" />
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM" />
    <property name="refasterjs-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs-classes" />
    <property name="basedir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.java.version" value="1.7" />
    <property name="ant.core.lib" value="/Users/linmanna/ant/lib/ant.jar" />
    <property name="file.encoding" value="UTF-8" />
    <property name="closure.build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="compiler-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/compiler.jar" />
    <property name="java.specification.version" value="1.7" />
    <property name="src.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src" />
    <property name="ant.project.invoked-targets" value="clean,compile,compile-tests,test" />
    <property name="javadoc.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/javadoc" />
    <property name="tools.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/tools" />
  </properties>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRecursiveFunction1" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRecursiveFunction2" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testReflectedMethods" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDoNotOptimizeJSCompiler_renameProperty" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDoNotOptimizeJSCompiler_ObjectPropertyString" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveUnusedVars" time="0.008">
    <failure message="&#xa;Expected: var a;var b=3;A();function A(){B()}function B(){C(b)}function C(){}P=function(){A()};try{0}catch(e){a}&#xa;Result:   var a;A();function A(){B()}function B(){C()}function C(){}P=function(){A()};try{0}catch(e){a}&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME A 1 [source_file: expected0]&#xa;        FUNCTION A 1 [source_file: expected0]&#xa;            NAME A 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME B 1 [source_file: expected0]&#xa;        FUNCTION B 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME C 1 [source_file: expected0]&#xa;                        NAME b 1 [source_file: expected0]&#xa;        FUNCTION C 1 [source_file: expected0]&#xa;            NAME C 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                NAME P 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        EXPR_RESULT 1 [source_file: expected0]&#xa;                            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                                NAME A 1 [source_file: expected0]&#xa;        TRY 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    NUMBER 0.0 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                CATCH 1 [source_file: expected0]&#xa;                    NAME e 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        EXPR_RESULT 1 [source_file: expected0]&#xa;                            NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME a 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME A 1 [source_file: testcode]&#xa;        FUNCTION A 1 [source_file: testcode]&#xa;            NAME A 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    CALL 1 [free_call: 1] [source_file: testcode]&#xa;                        NAME B 1 [source_file: testcode]&#xa;        FUNCTION B 1 [source_file: testcode]&#xa;            NAME B 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    CALL 1 [free_call: 1] [source_file: testcode]&#xa;                        NAME C 1 [source_file: testcode]&#xa;        FUNCTION C 1 [source_file: testcode]&#xa;            NAME C 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            ASSIGN 1 [source_file: testcode]&#xa;                NAME P 1 [source_file: testcode]&#xa;                FUNCTION  1 [source_file: testcode]&#xa;                    NAME  1 [source_file: testcode]&#xa;                    PARAM_LIST 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;                        EXPR_RESULT 1 [source_file: testcode]&#xa;                            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                                NAME A 1 [source_file: testcode]&#xa;        TRY 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    NUMBER 0.0 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                CATCH 1 [source_file: testcode]&#xa;                    NAME e 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;                        EXPR_RESULT 1 [source_file: testcode]&#xa;                            NAME a 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;    VAR 1 [source_file: expected0]&#xa;        NAME a 1 [source_file: expected0]&#xa;    VAR 1 [source_file: expected0]&#xa;        NAME b 1 [source_file: expected0]&#xa;            NUMBER 3.0 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        CALL 1 [free_call: 1] [source_file: expected0]&#xa;            NAME A 1 [source_file: expected0]&#xa;    FUNCTION A 1 [source_file: expected0]&#xa;        NAME A 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;            EXPR_RESULT 1 [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;    FUNCTION B 1 [source_file: expected0]&#xa;        NAME B 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;            EXPR_RESULT 1 [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME C 1 [source_file: expected0]&#xa;                    NAME b 1 [source_file: expected0]&#xa;    FUNCTION C 1 [source_file: expected0]&#xa;        NAME C 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        ASSIGN 1 [source_file: expected0]&#xa;            NAME P 1 [source_file: expected0]&#xa;            FUNCTION  1 [source_file: expected0]&#xa;                NAME  1 [source_file: expected0]&#xa;                PARAM_LIST 1 [source_file: expected0]&#xa;                BLOCK 1 [source_file: expected0]&#xa;                    EXPR_RESULT 1 [source_file: expected0]&#xa;                        CALL 1 [free_call: 1] [source_file: expected0]&#xa;                            NAME A 1 [source_file: expected0]&#xa;    TRY 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;            EXPR_RESULT 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;            CATCH 1 [source_file: expected0]&#xa;                NAME e 1 [source_file: expected0]&#xa;                BLOCK 1 [source_file: expected0]&#xa;                    EXPR_RESULT 1 [source_file: expected0]&#xa;                        NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;    VAR 1 [source_file: testcode]&#xa;        NAME a 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        CALL 1 [free_call: 1] [source_file: testcode]&#xa;            NAME A 1 [source_file: testcode]&#xa;    FUNCTION A 1 [source_file: testcode]&#xa;        NAME A 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;            EXPR_RESULT 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME B 1 [source_file: testcode]&#xa;    FUNCTION B 1 [source_file: testcode]&#xa;        NAME B 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;            EXPR_RESULT 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME C 1 [source_file: testcode]&#xa;    FUNCTION C 1 [source_file: testcode]&#xa;        NAME C 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        ASSIGN 1 [source_file: testcode]&#xa;            NAME P 1 [source_file: testcode]&#xa;            FUNCTION  1 [source_file: testcode]&#xa;                NAME  1 [source_file: testcode]&#xa;                PARAM_LIST 1 [source_file: testcode]&#xa;                BLOCK 1 [source_file: testcode]&#xa;                    EXPR_RESULT 1 [source_file: testcode]&#xa;                        CALL 1 [free_call: 1] [source_file: testcode]&#xa;                            NAME A 1 [source_file: testcode]&#xa;    TRY 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;            EXPR_RESULT 1 [source_file: testcode]&#xa;                NUMBER 0.0 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;            CATCH 1 [source_file: testcode]&#xa;                NAME e 1 [source_file: testcode]&#xa;                BLOCK 1 [source_file: testcode]&#xa;                    EXPR_RESULT 1 [source_file: testcode]&#xa;                        NAME a 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var a;var b=3;A();function A(){B()}function B(){C(b)}function C(){}P=function(){A()};try{0}catch(e){a}
Result:   var a;A();function A(){B()}function B(){C()}function C(){}P=function(){A()};try{0}catch(e){a}
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME A 1 [source_file: expected0]
        FUNCTION A 1 [source_file: expected0]
            NAME A 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME B 1 [source_file: expected0]
        FUNCTION B 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME C 1 [source_file: expected0]
                        NAME b 1 [source_file: expected0]
        FUNCTION C 1 [source_file: expected0]
            NAME C 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME P 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME A 1 [source_file: expected0]
        TRY 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    NUMBER 0.0 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                CATCH 1 [source_file: expected0]
                    NAME e 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME a 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME A 1 [source_file: testcode]
        FUNCTION A 1 [source_file: testcode]
            NAME A 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME B 1 [source_file: testcode]
        FUNCTION B 1 [source_file: testcode]
            NAME B 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME C 1 [source_file: testcode]
        FUNCTION C 1 [source_file: testcode]
            NAME C 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            ASSIGN 1 [source_file: testcode]
                NAME P 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME A 1 [source_file: testcode]
        TRY 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    NUMBER 0.0 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                CATCH 1 [source_file: testcode]
                    NAME e 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            NAME a 1 [source_file: testcode]


Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    VAR 1 [source_file: expected0]
        NAME a 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
            NUMBER 3.0 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME A 1 [source_file: expected0]
    FUNCTION A 1 [source_file: expected0]
        NAME A 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME B 1 [source_file: expected0]
    FUNCTION B 1 [source_file: expected0]
        NAME B 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME C 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
    FUNCTION C 1 [source_file: expected0]
        NAME C 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        ASSIGN 1 [source_file: expected0]
            NAME P 1 [source_file: expected0]
            FUNCTION  1 [source_file: expected0]
                NAME  1 [source_file: expected0]
                PARAM_LIST 1 [source_file: expected0]
                BLOCK 1 [source_file: expected0]
                    EXPR_RESULT 1 [source_file: expected0]
                        CALL 1 [free_call: 1] [source_file: expected0]
                            NAME A 1 [source_file: expected0]
    TRY 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            EXPR_RESULT 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            CATCH 1 [source_file: expected0]
                NAME e 1 [source_file: expected0]
                BLOCK 1 [source_file: expected0]
                    EXPR_RESULT 1 [source_file: expected0]
                        NAME a 1 [source_file: expected0]


Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    VAR 1 [source_file: testcode]
        NAME a 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME A 1 [source_file: testcode]
    FUNCTION A 1 [source_file: testcode]
        NAME A 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME B 1 [source_file: testcode]
    FUNCTION B 1 [source_file: testcode]
        NAME B 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME C 1 [source_file: testcode]
    FUNCTION C 1 [source_file: testcode]
        NAME C 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        ASSIGN 1 [source_file: testcode]
            NAME P 1 [source_file: testcode]
            FUNCTION  1 [source_file: testcode]
                NAME  1 [source_file: testcode]
                PARAM_LIST 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        CALL 1 [free_call: 1] [source_file: testcode]
                            NAME A 1 [source_file: testcode]
    TRY 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            EXPR_RESULT 1 [source_file: testcode]
                NUMBER 0.0 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
            CATCH 1 [source_file: testcode]
                NAME e 1 [source_file: testcode]
                BLOCK 1 [source_file: testcode]
                    EXPR_RESULT 1 [source_file: testcode]
                        NAME a 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveUnusedVars(RemoveUnusedVarsTest.java:48)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testFunctionArgRemoval" time="0.003">
    <failure message="&#xa;Expected: var b=function(){return};b(1,2)&#xa;Result:   var b=function(){return};b()&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        RETURN 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;                NUMBER 1.0 1 [source_file: expected0]&#xa;                NUMBER 2.0 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME b 1 [source_file: testcode]&#xa;                FUNCTION  1 [source_file: testcode]&#xa;                    NAME  1 [source_file: testcode]&#xa;                    PARAM_LIST 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;                        RETURN 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME b 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: CALL 1 [free_call: 1] [source_file: expected0]&#xa;    NAME b 1 [source_file: expected0]&#xa;    NUMBER 1.0 1 [source_file: expected0]&#xa;    NUMBER 2.0 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: CALL 1 [free_call: 1] [source_file: testcode]&#xa;    NAME b 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var b=function(){return};b(1,2)
Result:   var b=function(){return};b()
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME b 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]
                NUMBER 2.0 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME b 1 [source_file: testcode]
                FUNCTION  1 [source_file: testcode]
                    NAME  1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        RETURN 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME b 1 [source_file: testcode]


Expected subtree: CALL 1 [free_call: 1] [source_file: expected0]
    NAME b 1 [source_file: expected0]
    NUMBER 1.0 1 [source_file: expected0]
    NUMBER 2.0 1 [source_file: expected0]


Actual subtree: CALL 1 [free_call: 1] [source_file: testcode]
    NAME b 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testFunctionArgRemoval(RemoveUnusedVarsTest.java:153)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testFunctionArgRemovalFromCallSites" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testFunctionsDeadButEscaped" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testVarInControlStructure" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRValueHoisting" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testModule" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testFunctionWithName1" time="0.001">
    <failure message="&#xa;Expected: var x=function(){};x()&#xa;Result:   var x=function f(){};x()&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME x 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME x 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME x 1 [source_file: testcode]&#xa;                FUNCTION f 1 [source_file: testcode]&#xa;                    NAME f 1 [source_file: testcode]&#xa;                    PARAM_LIST 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME x 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: NAME  1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: NAME f 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var x=function(){};x()
Result:   var x=function f(){};x()
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME x 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME x 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME x 1 [source_file: testcode]
                FUNCTION f 1 [source_file: testcode]
                    NAME f 1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME x 1 [source_file: testcode]


Expected subtree: NAME  1 [source_file: expected0]


Actual subtree: NAME f 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testFunctionWithName1(RemoveUnusedVarsTest.java:230)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testFunctionWithName2" time="0.001">
    <failure message="&#xa;Expected: foo(function(){})&#xa;Result:   foo(function bar(){})&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME foo 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME foo 1 [source_file: testcode]&#xa;                FUNCTION bar 1 [source_file: testcode]&#xa;                    NAME bar 1 [source_file: testcode]&#xa;                    PARAM_LIST 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: NAME  1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: NAME bar 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: foo(function(){})
Result:   foo(function bar(){})
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME foo 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME foo 1 [source_file: testcode]
                FUNCTION bar 1 [source_file: testcode]
                    NAME bar 1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]


Expected subtree: NAME  1 [source_file: expected0]


Actual subtree: NAME bar 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testFunctionWithName2(RemoveUnusedVarsTest.java:238)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveGlobal1" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveGlobal2" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveGlobal3" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveGlobal4" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testIssue168a" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testIssue168b" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign1" time="0.012" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign2" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign3" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign4" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign5" time="0.002">
    <failure message="&#xa;Expected: var z=function(){};z()&#xa;Result:   var z=function f(){};z()&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME z 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME z 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME z 1 [source_file: testcode]&#xa;                FUNCTION f 1 [source_file: testcode]&#xa;                    NAME f 1 [source_file: testcode]&#xa;                    PARAM_LIST 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME z 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: NAME  1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: NAME f 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var z=function(){};z()
Result:   var z=function f(){};z()
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME z 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME z 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME z 1 [source_file: testcode]
                FUNCTION f 1 [source_file: testcode]
                    NAME f 1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME z 1 [source_file: testcode]


Expected subtree: NAME  1 [source_file: expected0]


Actual subtree: NAME f 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testUnusedAssign5(RemoveUnusedVarsTest.java:316)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign5b" time="0.002">
    <failure message="&#xa;Expected: var z=function(){alert()};z()&#xa;Result:   var z=function f(){alert()};z()&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME z 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        EXPR_RESULT 1 [source_file: expected0]&#xa;                            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                                NAME alert 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME z 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME z 1 [source_file: testcode]&#xa;                FUNCTION f 1 [source_file: testcode]&#xa;                    NAME f 1 [source_file: testcode]&#xa;                    PARAM_LIST 1 [source_file: testcode]&#xa;                    BLOCK 1 [source_file: testcode]&#xa;                        EXPR_RESULT 1 [source_file: testcode]&#xa;                            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                                NAME alert 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME z 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: NAME  1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: NAME f 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var z=function(){alert()};z()
Result:   var z=function f(){alert()};z()
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME z 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            CALL 1 [free_call: 1] [source_file: expected0]
                                NAME alert 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME z 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME z 1 [source_file: testcode]
                FUNCTION f 1 [source_file: testcode]
                    NAME f 1 [source_file: testcode]
                    PARAM_LIST 1 [source_file: testcode]
                    BLOCK 1 [source_file: testcode]
                        EXPR_RESULT 1 [source_file: testcode]
                            CALL 1 [free_call: 1] [source_file: testcode]
                                NAME alert 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME z 1 [source_file: testcode]


Expected subtree: NAME  1 [source_file: expected0]


Actual subtree: NAME f 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testUnusedAssign5b(RemoveUnusedVarsTest.java:321)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign6" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign6b" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign7" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedAssign8" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign1" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign1b" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign2" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign2b" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign3" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign3b" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign4" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign5" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign6" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign7" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign7b" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUnusedPropAssign7c" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign1" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign2" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign3" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign4" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign5" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign6" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign7" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign8" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testUsedPropAssign9" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDependencies1" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDependencies1b" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDependencies1c" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDependencies2" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDependencies2b" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDependencies2c" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testGlobalVarReferencesLocalVar" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testLocalVarReferencesGlobalVar1" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testLocalVarReferencesGlobalVar2" time="0.002">
    <failure message="&#xa;Expected: function f(b,c){alert(c)}f()&#xa;Result:   function f(c){alert(c)}f()&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION f 1 [source_file: expected0]&#xa;            NAME f 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;                NAME c 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME alert 1 [source_file: expected0]&#xa;                        NAME c 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME f 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION f 1 [source_file: testcode]&#xa;            NAME f 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;                NAME c 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    CALL 1 [free_call: 1] [source_file: testcode]&#xa;                        NAME alert 1 [source_file: testcode]&#xa;                        NAME c 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME f 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: PARAM_LIST 1 [source_file: expected0]&#xa;    NAME b 1 [source_file: expected0]&#xa;    NAME c 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: PARAM_LIST 1 [source_file: testcode]&#xa;    NAME c 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function f(b,c){alert(c)}f()
Result:   function f(c){alert(c)}f()
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
                NAME c 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME alert 1 [source_file: expected0]
                        NAME c 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME f 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION f 1 [source_file: testcode]
            NAME f 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME c 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME alert 1 [source_file: testcode]
                        NAME c 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME f 1 [source_file: testcode]


Expected subtree: PARAM_LIST 1 [source_file: expected0]
    NAME b 1 [source_file: expected0]
    NAME c 1 [source_file: expected0]


Actual subtree: PARAM_LIST 1 [source_file: testcode]
    NAME c 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testLocalVarReferencesGlobalVar2(RemoveUnusedVarsTest.java:478)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testCallSiteInteraction" time="0.022" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testCallSiteInteraction_constructors" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testFunctionArgRemovalCausingInconsistency" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveUnusedVarsPossibleNpeCase" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testDoNotOptimizeSetters" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveSingletonClass1" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass1" time="0.002">
    <failure message="&#xa;Expected: function a(){}new a&#xa;Result:   function a(){}new a&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION a 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION a 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function a(){}new a
Result:   function a(){}new a
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION a 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION a 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass1(RemoveUnusedVarsTest.java:626)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass2" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass3" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass4" time="0.002">
    <failure message="&#xa;Expected: function goog$inherits(){}function a(){}function b(){}goog$inherits(b,a);function c(){}goog$inherits(c,b);new c&#xa;Result:   function goog$inherits(){}goog$inherits();function c(){}goog$inherits();new c&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$inherits 1 [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$inherits 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;        FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;            NAME c 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$inherits 1 [source_file: expected0]&#xa;                NAME c 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME c 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION goog$inherits 1 [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME goog$inherits 1 [source_file: testcode]&#xa;        FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;            NAME c 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME goog$inherits 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME c 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;    FUNCTION goog$inherits 1 [source_file: expected0]&#xa;        NAME goog$inherits 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;        NAME a 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;        NAME b 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        CALL 1 [free_call: 1] [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;    FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;        NAME c 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        CALL 1 [free_call: 1] [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            NAME c 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        NEW 1 [source_file: expected0]&#xa;            NAME c 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;    FUNCTION goog$inherits 1 [source_file: testcode]&#xa;        NAME goog$inherits 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        CALL 1 [free_call: 1] [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;    FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;        NAME c 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        CALL 1 [free_call: 1] [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        NEW 1 [source_file: testcode]&#xa;            NAME c 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$inherits(){}function a(){}function b(){}goog$inherits(b,a);function c(){}goog$inherits(c,b);new c
Result:   function goog$inherits(){}goog$inherits();function c(){}goog$inherits();new c
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$inherits 1 [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
            NAME b 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$inherits 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
        FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
            NAME c 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$inherits 1 [source_file: expected0]
                NAME c 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME c 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION goog$inherits 1 [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME goog$inherits 1 [source_file: testcode]
        FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
            NAME c 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME goog$inherits 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME c 1 [source_file: testcode]


Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION goog$inherits 1 [source_file: expected0]
        NAME goog$inherits 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
        NAME a 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
        NAME b 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
    FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
        NAME c 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            NAME c 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        NEW 1 [source_file: expected0]
            NAME c 1 [source_file: expected0]


Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    FUNCTION goog$inherits 1 [source_file: testcode]
        NAME goog$inherits 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
    FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
        NAME c 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        NEW 1 [source_file: testcode]
            NAME c 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass4(RemoveUnusedVarsTest.java:651)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass5" time="0.001">
    <failure message="&#xa;Expected: function goog$inherits(){}function a(){}function b(){}goog$inherits(b,a);new b&#xa;Result:   function goog$inherits(){}function b(){}goog$inherits();new b&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$inherits 1 [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION a 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION b 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$inherits 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION goog$inherits 1 [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;            NAME b 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME goog$inherits 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME b 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;    FUNCTION goog$inherits 1 [source_file: expected0]&#xa;        NAME goog$inherits 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION a 1 [source_file: expected0]&#xa;        NAME a 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION b 1 [source_file: expected0]&#xa;        NAME b 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        CALL 1 [free_call: 1] [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        NEW 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;    FUNCTION goog$inherits 1 [source_file: testcode]&#xa;        NAME goog$inherits 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;        NAME b 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        CALL 1 [free_call: 1] [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        NEW 1 [source_file: testcode]&#xa;            NAME b 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$inherits(){}function a(){}function b(){}goog$inherits(b,a);new b
Result:   function goog$inherits(){}function b(){}goog$inherits();new b
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$inherits 1 [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION a 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION b 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$inherits 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION goog$inherits 1 [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
            NAME b 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME goog$inherits 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]


Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION goog$inherits 1 [source_file: expected0]
        NAME goog$inherits 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION a 1 [source_file: expected0]
        NAME a 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION b 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        NEW 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]


Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    FUNCTION goog$inherits 1 [source_file: testcode]
        NAME goog$inherits 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
        NAME b 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        NEW 1 [source_file: testcode]
            NAME b 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass5(RemoveUnusedVarsTest.java:660)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass6" time="0.002">
    <failure message="&#xa;Expected: function goog$mixin(){}function a(){}function c(){}goog$mixin(c.prototype,a.prototype);new c&#xa;Result:   function goog$mixin(){}function c(){}goog$mixin();new c&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$mixin 1 [source_file: expected0]&#xa;            NAME goog$mixin 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION a 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION c 1 [source_file: expected0]&#xa;            NAME c 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$mixin 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME c 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME a 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME c 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION goog$mixin 1 [source_file: testcode]&#xa;            NAME goog$mixin 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;            NAME c 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME goog$mixin 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME c 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;    FUNCTION goog$mixin 1 [source_file: expected0]&#xa;        NAME goog$mixin 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION a 1 [source_file: expected0]&#xa;        NAME a 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION c 1 [source_file: expected0]&#xa;        NAME c 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        CALL 1 [free_call: 1] [source_file: expected0]&#xa;            NAME goog$mixin 1 [source_file: expected0]&#xa;            GETPROP 1 [source_file: expected0]&#xa;                NAME c 1 [source_file: expected0]&#xa;                STRING prototype 1 [source_file: expected0]&#xa;            GETPROP 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;                STRING prototype 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        NEW 1 [source_file: expected0]&#xa;            NAME c 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;    FUNCTION goog$mixin 1 [source_file: testcode]&#xa;        NAME goog$mixin 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;        NAME c 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        CALL 1 [free_call: 1] [source_file: testcode]&#xa;            NAME goog$mixin 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        NEW 1 [source_file: testcode]&#xa;            NAME c 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$mixin(){}function a(){}function c(){}goog$mixin(c.prototype,a.prototype);new c
Result:   function goog$mixin(){}function c(){}goog$mixin();new c
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$mixin 1 [source_file: expected0]
            NAME goog$mixin 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION a 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION c 1 [source_file: expected0]
            NAME c 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$mixin 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME c 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME c 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION goog$mixin 1 [source_file: testcode]
            NAME goog$mixin 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
            NAME c 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME goog$mixin 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME c 1 [source_file: testcode]


Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION goog$mixin 1 [source_file: expected0]
        NAME goog$mixin 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION a 1 [source_file: expected0]
        NAME a 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION c 1 [source_file: expected0]
        NAME c 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME goog$mixin 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME c 1 [source_file: expected0]
                STRING prototype 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
                STRING prototype 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        NEW 1 [source_file: expected0]
            NAME c 1 [source_file: expected0]


Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    FUNCTION goog$mixin 1 [source_file: testcode]
        NAME goog$mixin 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    FUNCTION c 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
        NAME c 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME goog$mixin 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        NEW 1 [source_file: testcode]
            NAME c 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass6(RemoveUnusedVarsTest.java:673)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass7" time="0.001">
    <failure message="&#xa;Expected: function goog$mixin(){}function a(){alert(goog$mixin(a,a))}new a&#xa;Result:   function goog$mixin(){}function a(){alert(goog$mixin())}new a&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$mixin 1 [source_file: expected0]&#xa;            NAME goog$mixin 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION a 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME alert 1 [source_file: expected0]&#xa;                        CALL 1 [free_call: 1] [source_file: expected0]&#xa;                            NAME goog$mixin 1 [source_file: expected0]&#xa;                            NAME a 1 [source_file: expected0]&#xa;                            NAME a 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION goog$mixin 1 [source_file: testcode]&#xa;            NAME goog$mixin 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;            NAME a 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    CALL 1 [free_call: 1] [source_file: testcode]&#xa;                        NAME alert 1 [source_file: testcode]&#xa;                        CALL 1 [free_call: 1] [source_file: testcode]&#xa;                            NAME goog$mixin 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME a 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: FUNCTION a 1 [source_file: expected0]&#xa;    NAME a 1 [source_file: expected0]&#xa;    PARAM_LIST 1 [source_file: expected0]&#xa;    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME alert 1 [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME goog$mixin 1 [source_file: expected0]&#xa;                    NAME a 1 [source_file: expected0]&#xa;                    NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;    NAME a 1 [source_file: testcode]&#xa;    PARAM_LIST 1 [source_file: testcode]&#xa;    BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME alert 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME goog$mixin 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$mixin(){}function a(){alert(goog$mixin(a,a))}new a
Result:   function goog$mixin(){}function a(){alert(goog$mixin())}new a
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$mixin 1 [source_file: expected0]
            NAME goog$mixin 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION a 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME alert 1 [source_file: expected0]
                        CALL 1 [free_call: 1] [source_file: expected0]
                            NAME goog$mixin 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
                            NAME a 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION goog$mixin 1 [source_file: testcode]
            NAME goog$mixin 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
            NAME a 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME alert 1 [source_file: testcode]
                        CALL 1 [free_call: 1] [source_file: testcode]
                            NAME goog$mixin 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME a 1 [source_file: testcode]


Expected subtree: FUNCTION a 1 [source_file: expected0]
    NAME a 1 [source_file: expected0]
    PARAM_LIST 1 [source_file: expected0]
    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME alert 1 [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME goog$mixin 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]


Actual subtree: FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
    NAME a 1 [source_file: testcode]
    PARAM_LIST 1 [source_file: testcode]
    BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME alert 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME goog$mixin 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass7(RemoveUnusedVarsTest.java:688)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass8" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass9" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass10" time="0.001">
    <failure message="&#xa;Expected: function goog$inherits(){}function a(){}function b(){}goog$inherits(b,a);new a;new b&#xa;Result:   function goog$inherits(){}function a(){}function b(){}goog$inherits();new a;new b&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$inherits 1 [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION a 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION b 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$inherits 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION a 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$inherits(){}function a(){}function b(){}goog$inherits(b,a);new a;new b
Result:   function goog$inherits(){}function a(){}function b(){}goog$inherits();new a;new b
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$inherits 1 [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION a 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION b 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$inherits 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION a 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass10(RemoveUnusedVarsTest.java:712)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass11" time="0.002">
    <failure message="&#xa;Expected: function goog$inherits(){}function goog$mixin(a$$1,b$$1){goog$inherits(a$$1,b$$1)}function a(){}function b(){}goog$mixin(b.prototype,a.prototype);new b&#xa;Result:   function goog$inherits(){}function goog$mixin(){goog$inherits()}function a(){}function b(){}goog$mixin();new b&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$inherits 1 [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION goog$mixin 1 [source_file: expected0]&#xa;            NAME goog$mixin 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;                NAME a$$1 1 [source_file: expected0]&#xa;                NAME b$$1 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME goog$inherits 1 [source_file: expected0]&#xa;                        NAME a$$1 1 [source_file: expected0]&#xa;                        NAME b$$1 1 [source_file: expected0]&#xa;        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$mixin 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME b 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME a 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION goog$inherits 1 [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        FUNCTION goog$mixin 1 [source_file: testcode]&#xa;            NAME goog$mixin 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    CALL 1 [free_call: 1] [source_file: testcode]&#xa;                        NAME goog$inherits 1 [source_file: testcode]&#xa;        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;            NAME a 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: testcode]&#xa;            NAME b 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME goog$mixin 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME b 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: PARAM_LIST 1 [source_file: expected0]&#xa;    NAME a$$1 1 [source_file: expected0]&#xa;    NAME b$$1 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: PARAM_LIST 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$inherits(){}function goog$mixin(a$$1,b$$1){goog$inherits(a$$1,b$$1)}function a(){}function b(){}goog$mixin(b.prototype,a.prototype);new b
Result:   function goog$inherits(){}function goog$mixin(){goog$inherits()}function a(){}function b(){}goog$mixin();new b
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$inherits 1 [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION goog$mixin 1 [source_file: expected0]
            NAME goog$mixin 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME a$$1 1 [source_file: expected0]
                NAME b$$1 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME goog$inherits 1 [source_file: expected0]
                        NAME a$$1 1 [source_file: expected0]
                        NAME b$$1 1 [source_file: expected0]
        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
            NAME b 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$mixin 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME a 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION goog$inherits 1 [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        FUNCTION goog$mixin 1 [source_file: testcode]
            NAME goog$mixin 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME goog$inherits 1 [source_file: testcode]
        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
            NAME a 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        FUNCTION b 1 [jsdoc_info: JSDocInfo] [source_file: testcode]
            NAME b 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME goog$mixin 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME b 1 [source_file: testcode]


Expected subtree: PARAM_LIST 1 [source_file: expected0]
    NAME a$$1 1 [source_file: expected0]
    NAME b$$1 1 [source_file: expected0]


Actual subtree: PARAM_LIST 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass11(RemoveUnusedVarsTest.java:722)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testRemoveInheritedClass12" time="0.002">
    <failure message="&#xa;Expected: function goog$inherits(){}function a(){}var b={};goog$inherits(b.foo,a)&#xa;Result:   function goog$inherits(){}goog$inherits()&#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION goog$inherits 1 [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME b 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME goog$inherits 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME b 1 [source_file: expected0]&#xa;                    STRING foo 1 [source_file: expected0]&#xa;                NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        FUNCTION goog$inherits 1 [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME goog$inherits 1 [source_file: testcode]&#xa;&#xa;&#xa;Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;    FUNCTION goog$inherits 1 [source_file: expected0]&#xa;        NAME goog$inherits 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;        NAME a 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;    VAR 1 [source_file: expected0]&#xa;        NAME b 1 [source_file: expected0]&#xa;            OBJECTLIT 1 [source_file: expected0]&#xa;    EXPR_RESULT 1 [source_file: expected0]&#xa;        CALL 1 [free_call: 1] [source_file: expected0]&#xa;            NAME goog$inherits 1 [source_file: expected0]&#xa;            GETPROP 1 [source_file: expected0]&#xa;                NAME b 1 [source_file: expected0]&#xa;                STRING foo 1 [source_file: expected0]&#xa;            NAME a 1 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;    FUNCTION goog$inherits 1 [source_file: testcode]&#xa;        NAME goog$inherits 1 [source_file: testcode]&#xa;        PARAM_LIST 1 [source_file: testcode]&#xa;        BLOCK 1 [source_file: testcode]&#xa;    EXPR_RESULT 1 [source_file: testcode]&#xa;        CALL 1 [free_call: 1] [source_file: testcode]&#xa;            NAME goog$inherits 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function goog$inherits(){}function a(){}var b={};goog$inherits(b.foo,a)
Result:   function goog$inherits(){}goog$inherits()
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION goog$inherits 1 [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
            NAME a 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME b 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME goog$inherits 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME b 1 [source_file: expected0]
                    STRING foo 1 [source_file: expected0]
                NAME a 1 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        FUNCTION goog$inherits 1 [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME goog$inherits 1 [source_file: testcode]


Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION goog$inherits 1 [source_file: expected0]
        NAME goog$inherits 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    FUNCTION a 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
        NAME a 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
    VAR 1 [source_file: expected0]
        NAME b 1 [source_file: expected0]
            OBJECTLIT 1 [source_file: expected0]
    EXPR_RESULT 1 [source_file: expected0]
        CALL 1 [free_call: 1] [source_file: expected0]
            NAME goog$inherits 1 [source_file: expected0]
            GETPROP 1 [source_file: expected0]
                NAME b 1 [source_file: expected0]
                STRING foo 1 [source_file: expected0]
            NAME a 1 [source_file: expected0]


Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
    FUNCTION goog$inherits 1 [source_file: testcode]
        NAME goog$inherits 1 [source_file: testcode]
        PARAM_LIST 1 [source_file: testcode]
        BLOCK 1 [source_file: testcode]
    EXPR_RESULT 1 [source_file: testcode]
        CALL 1 [free_call: 1] [source_file: testcode]
            NAME goog$inherits 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testRemoveInheritedClass12(RemoveUnusedVarsTest.java:730)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testIssue618_1" time="0.001">
    <failure message="&#xa;Expected: function f(){var a=[];var b;a.push(b=[]);b[0]=1;return a}&#xa;Result:   &#xa;Node tree inequality:&#xa;Expected tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION f 1 [source_file: expected0]&#xa;            NAME f 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                VAR 1 [source_file: expected0]&#xa;                    NAME a 2 [source_file: expected0]&#xa;                        ARRAYLIT 2 [source_file: expected0]&#xa;                VAR 2 [source_file: expected0]&#xa;                    NAME b 2 [source_file: expected0]&#xa;                EXPR_RESULT 3 [source_file: expected0]&#xa;                    CALL 3 [source_file: expected0]&#xa;                        GETPROP 3 [source_file: expected0]&#xa;                            NAME a 3 [source_file: expected0]&#xa;                            STRING push 3 [source_file: expected0]&#xa;                        ASSIGN 3 [source_file: expected0]&#xa;                            NAME b 3 [source_file: expected0]&#xa;                            ARRAYLIT 3 [source_file: expected0]&#xa;                EXPR_RESULT 4 [source_file: expected0]&#xa;                    ASSIGN 4 [source_file: expected0]&#xa;                        GETELEM 4 [source_file: expected0]&#xa;                            NAME b 4 [source_file: expected0]&#xa;                            NUMBER 0.0 4 [source_file: expected0]&#xa;                        NUMBER 1.0 4 [source_file: expected0]&#xa;                RETURN 5 [source_file: expected0]&#xa;                    NAME a 5 [source_file: expected0]&#xa;&#xa;&#xa;Actual tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;&#xa;&#xa;Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;    FUNCTION f 1 [source_file: expected0]&#xa;        NAME f 1 [source_file: expected0]&#xa;        PARAM_LIST 1 [source_file: expected0]&#xa;        BLOCK 1 [source_file: expected0]&#xa;            VAR 1 [source_file: expected0]&#xa;                NAME a 2 [source_file: expected0]&#xa;                    ARRAYLIT 2 [source_file: expected0]&#xa;            VAR 2 [source_file: expected0]&#xa;                NAME b 2 [source_file: expected0]&#xa;            EXPR_RESULT 3 [source_file: expected0]&#xa;                CALL 3 [source_file: expected0]&#xa;                    GETPROP 3 [source_file: expected0]&#xa;                        NAME a 3 [source_file: expected0]&#xa;                        STRING push 3 [source_file: expected0]&#xa;                    ASSIGN 3 [source_file: expected0]&#xa;                        NAME b 3 [source_file: expected0]&#xa;                        ARRAYLIT 3 [source_file: expected0]&#xa;            EXPR_RESULT 4 [source_file: expected0]&#xa;                ASSIGN 4 [source_file: expected0]&#xa;                    GETELEM 4 [source_file: expected0]&#xa;                        NAME b 4 [source_file: expected0]&#xa;                        NUMBER 0.0 4 [source_file: expected0]&#xa;                    NUMBER 1.0 4 [source_file: expected0]&#xa;            RETURN 5 [source_file: expected0]&#xa;                NAME a 5 [source_file: expected0]&#xa;&#xa;&#xa;Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function f(){var a=[];var b;a.push(b=[]);b[0]=1;return a}
Result:   
Node tree inequality:
Expected tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION f 1 [source_file: expected0]
            NAME f 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                VAR 1 [source_file: expected0]
                    NAME a 2 [source_file: expected0]
                        ARRAYLIT 2 [source_file: expected0]
                VAR 2 [source_file: expected0]
                    NAME b 2 [source_file: expected0]
                EXPR_RESULT 3 [source_file: expected0]
                    CALL 3 [source_file: expected0]
                        GETPROP 3 [source_file: expected0]
                            NAME a 3 [source_file: expected0]
                            STRING push 3 [source_file: expected0]
                        ASSIGN 3 [source_file: expected0]
                            NAME b 3 [source_file: expected0]
                            ARRAYLIT 3 [source_file: expected0]
                EXPR_RESULT 4 [source_file: expected0]
                    ASSIGN 4 [source_file: expected0]
                        GETELEM 4 [source_file: expected0]
                            NAME b 4 [source_file: expected0]
                            NUMBER 0.0 4 [source_file: expected0]
                        NUMBER 1.0 4 [source_file: expected0]
                RETURN 5 [source_file: expected0]
                    NAME a 5 [source_file: expected0]


Actual tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]


Expected subtree: SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
    FUNCTION f 1 [source_file: expected0]
        NAME f 1 [source_file: expected0]
        PARAM_LIST 1 [source_file: expected0]
        BLOCK 1 [source_file: expected0]
            VAR 1 [source_file: expected0]
                NAME a 2 [source_file: expected0]
                    ARRAYLIT 2 [source_file: expected0]
            VAR 2 [source_file: expected0]
                NAME b 2 [source_file: expected0]
            EXPR_RESULT 3 [source_file: expected0]
                CALL 3 [source_file: expected0]
                    GETPROP 3 [source_file: expected0]
                        NAME a 3 [source_file: expected0]
                        STRING push 3 [source_file: expected0]
                    ASSIGN 3 [source_file: expected0]
                        NAME b 3 [source_file: expected0]
                        ARRAYLIT 3 [source_file: expected0]
            EXPR_RESULT 4 [source_file: expected0]
                ASSIGN 4 [source_file: expected0]
                    GETELEM 4 [source_file: expected0]
                        NAME b 4 [source_file: expected0]
                        NUMBER 0.0 4 [source_file: expected0]
                    NUMBER 1.0 4 [source_file: expected0]
            RETURN 5 [source_file: expected0]
                NAME a 5 [source_file: expected0]


Actual subtree: SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.RemoveUnusedVarsTest.testIssue618_1(RemoveUnusedVarsTest.java:749)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testIssue618_2" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testNestedAssign1" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testNestedAssign2" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.RemoveUnusedVarsTest" name="testNestedAssign3" time="0.001" />
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
