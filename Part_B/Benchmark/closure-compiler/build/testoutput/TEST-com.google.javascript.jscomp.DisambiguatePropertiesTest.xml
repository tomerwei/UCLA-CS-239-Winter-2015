<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="28" hostname="cs-210-206.cs.ucla.edu" name="com.google.javascript.jscomp.DisambiguatePropertiesTest" skipped="0" tests="65" time="0.385" timestamp="2015-03-08T21:49:10">
  <properties>
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="lib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib" />
    <property name="refasterjs-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="os.name" value="Mac OS X" />
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/classes" />
    <property name="maven-repository-id" value="sonatype-nexus-staging" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.home" value="//Users/linmanna/ant" />
    <property name="java.runtime.version" value="1.7.0_75-b13" />
    <property name="gen.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/gen" />
    <property name="user.name" value="linmanna" />
    <property name="ant.file.compiler" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="ant.build.javac.target" value="1.7" />
    <property name="user.language" value="zh" />
    <property name="test.method" value="" />
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib" />
    <property name="ant.project.default-target" value="jar" />
    <property name="ant.project.name" value="compiler" />
    <property name="java.version" value="1.7.0_75" />
    <property name="user.timezone" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/endorsed" />
    <property name="sun.cpu.isalist" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="file.separator" value="/" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="protoc.executable" value="protoc" />
    <property name="classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes" />
    <property name="java.class.version" value="51.0" />
    <property name="testClasses.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test" />
    <property name="user.country" value="CN" />
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="externs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/externs" />
    <property name="ant.file" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="os.version" value="10.9.5" />
    <property name="javac.debug" value="on" />
    <property name="path.separator" value=":" />
    <property name="java.vm.version" value="24.75-b04" />
    <property name="ant.library.dir" value="//Users/linmanna/ant/lib" />
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob" />
    <property name="webservice-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="test.fork" value="true" />
    <property name="webservice.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/jscomp/webservice" />
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit" />
    <property name="buildlib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/lib" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ant.build.javac.source" value="1.7" />
    <property name="refasterjs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/refactoring" />
    <property name="user.home" value="/Users/linmanna" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/test" />
    <property name="java.library.path" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="gopherProxySet" value="false" />
    <property name="build.relVersion" value="5107abc" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junittestcases5949901879760027472.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false formatter=org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter showoutput=true outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/testoutput/IGNORETHIS.xml crashfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junitvmwatcher5896012663290099626.properties propsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junit3382148267101857145.properties" />
    <property name="java.class.path" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant-launcher.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/args4j.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/gson.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/guava.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/jsr305.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/junit.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/protobuf-java.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/truth.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test:/Users/linmanna/ant/lib/ant-launcher.jar:/Users/linmanna/ant/lib/ant.jar:/Users/linmanna/ant/lib/ant-junit.jar:/Users/linmanna/ant/lib/ant-junit4.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.4 compiled on April 29 2014" />
    <property name="test.class" value="*Test" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.file.type" value="file" />
    <property name="java.vm.specification.version" value="1.7" />
    <property name="sun.cpu.endian" value="little" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="java.io.tmpdir" value="/var/folders/_p/3swdt4h96dn79vyt21dtny9h0000gn/T/" />
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/" />
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment" />
    <property name="maven-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <property name="os.arch" value="x86_64" />
    <property name="webservice-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice-classes" />
    <property name="java.ext.dirs" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java" />
    <property name="user.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.file.type.compiler" value="file" />
    <property name="line.separator" value="&#xa;" />
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM" />
    <property name="refasterjs-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs-classes" />
    <property name="basedir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.java.version" value="1.7" />
    <property name="ant.core.lib" value="/Users/linmanna/ant/lib/ant.jar" />
    <property name="file.encoding" value="UTF-8" />
    <property name="closure.build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="compiler-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/compiler.jar" />
    <property name="java.specification.version" value="1.7" />
    <property name="src.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src" />
    <property name="ant.project.invoked-targets" value="clean,compile,compile-tests,test" />
    <property name="javadoc.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/javadoc" />
    <property name="tools.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/tools" />
  </properties>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testOneType1" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testOneType2" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testOneType3" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testOneType4" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testPrototypeAndInstance1" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testPrototypeAndInstance2" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testPrototypeAndInstance3" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testPrototypeAndInstance4" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoTypes1" time="0.004">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var B=new Bar;B.Bar_prototype$a=0&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var B=new Bar;B.Bar_prototype$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var B=new Bar;B.Bar_prototype$a=0
Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var B=new Bar;B.Bar_prototype$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoTypes1(DisambiguatePropertiesTest.java:188)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoTypes2" time="0.005">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype={Foo_prototype$a:0};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={Bar_prototype$a:0};var B=new Bar;B.Bar_prototype$a=0&#xa;Result:   function Foo(){}Foo.prototype={Foo_prototype$a:0};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={Bar_prototype$a:0};var B=new Bar;B.Bar_prototype$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    STRING_KEY Foo_prototype$a 1 [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    STRING_KEY Bar_prototype$a 1 [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype={Foo_prototype$a:0};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={Bar_prototype$a:0};var B=new Bar;B.Bar_prototype$a=0
Result:   function Foo(){}Foo.prototype={Foo_prototype$a:0};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={Bar_prototype$a:0};var B=new Bar;B.Bar_prototype$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    STRING_KEY Foo_prototype$a 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    STRING_KEY Bar_prototype$a 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoTypes2(DisambiguatePropertiesTest.java:214)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoTypes3" time="0.006">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype={get Foo_prototype$a(){return 0},set Foo_prototype$a(b){}};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={get Bar_prototype$a(){return 0},set Bar_prototype$a(b$$1){}};var B=new Bar;B.Bar_prototype$a=0&#xa;Result:   function Foo(){}Foo.prototype={get Foo_prototype$a(){return 0},set Foo_prototype$a(b){}};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={get Bar_prototype$a(){return 0},set Bar_prototype$a(b$$1){}};var B=new Bar;B.Bar_prototype$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    GETTER_DEF Foo_prototype$a 1 [source_file: expected0]&#xa;                        FUNCTION  1&#xa;                            NAME  1&#xa;                            PARAM_LIST 1&#xa;                            BLOCK 1 [source_file: expected0]&#xa;                                RETURN 1 [source_file: expected0]&#xa;                                    NUMBER 0.0 1 [source_file: expected0]&#xa;                    SETTER_DEF Foo_prototype$a 1 [source_file: expected0]&#xa;                        FUNCTION  1&#xa;                            NAME  1&#xa;                            PARAM_LIST 1&#xa;                                NAME b 1 [source_file: expected0]&#xa;                            BLOCK 1 [source_file: expected0]&#xa;        VAR 2 [source_file: expected0]&#xa;            NAME F 2 [source_file: expected0]&#xa;                NEW 2 [source_file: expected0]&#xa;                    NAME Foo 2 [source_file: expected0]&#xa;        EXPR_RESULT 2 [source_file: expected0]&#xa;            ASSIGN 2 [source_file: expected0]&#xa;                GETPROP 2 [source_file: expected0]&#xa;                    NAME F 2 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 2 [source_file: expected0]&#xa;                NUMBER 0.0 2 [source_file: expected0]&#xa;        FUNCTION Bar 2 [source_file: expected0]&#xa;            NAME Bar 2 [source_file: expected0]&#xa;            PARAM_LIST 2 [source_file: expected0]&#xa;            BLOCK 2 [source_file: expected0]&#xa;        EXPR_RESULT 2 [source_file: expected0]&#xa;            ASSIGN 2 [source_file: expected0]&#xa;                GETPROP 2 [source_file: expected0]&#xa;                    NAME Bar 2 [source_file: expected0]&#xa;                    STRING prototype 2 [source_file: expected0]&#xa;                OBJECTLIT 2 [source_file: expected0]&#xa;                    GETTER_DEF Bar_prototype$a 2 [source_file: expected0]&#xa;                        FUNCTION  2&#xa;                            NAME  2&#xa;                            PARAM_LIST 2&#xa;                            BLOCK 2 [source_file: expected0]&#xa;                                RETURN 2 [source_file: expected0]&#xa;                                    NUMBER 0.0 2 [source_file: expected0]&#xa;                    SETTER_DEF Bar_prototype$a 2 [source_file: expected0]&#xa;                        FUNCTION  2&#xa;                            NAME  2&#xa;                            PARAM_LIST 2&#xa;                                NAME b$$1 2 [source_file: expected0]&#xa;                            BLOCK 2 [source_file: expected0]&#xa;        VAR 3 [source_file: expected0]&#xa;            NAME B 3 [source_file: expected0]&#xa;                NEW 3 [source_file: expected0]&#xa;                    NAME Bar 3 [source_file: expected0]&#xa;        EXPR_RESULT 3 [source_file: expected0]&#xa;            ASSIGN 3 [source_file: expected0]&#xa;                GETPROP 3 [source_file: expected0]&#xa;                    NAME B 3 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 3 [source_file: expected0]&#xa;                NUMBER 0.0 3 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype={get Foo_prototype$a(){return 0},set Foo_prototype$a(b){}};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={get Bar_prototype$a(){return 0},set Bar_prototype$a(b$$1){}};var B=new Bar;B.Bar_prototype$a=0
Result:   function Foo(){}Foo.prototype={get Foo_prototype$a(){return 0},set Foo_prototype$a(b){}};var F=new Foo;F.Foo_prototype$a=0;function Bar(){}Bar.prototype={get Bar_prototype$a(){return 0},set Bar_prototype$a(b$$1){}};var B=new Bar;B.Bar_prototype$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    GETTER_DEF Foo_prototype$a 1 [source_file: expected0]
                        FUNCTION  1
                            NAME  1
                            PARAM_LIST 1
                            BLOCK 1 [source_file: expected0]
                                RETURN 1 [source_file: expected0]
                                    NUMBER 0.0 1 [source_file: expected0]
                    SETTER_DEF Foo_prototype$a 1 [source_file: expected0]
                        FUNCTION  1
                            NAME  1
                            PARAM_LIST 1
                                NAME b 1 [source_file: expected0]
                            BLOCK 1 [source_file: expected0]
        VAR 2 [source_file: expected0]
            NAME F 2 [source_file: expected0]
                NEW 2 [source_file: expected0]
                    NAME Foo 2 [source_file: expected0]
        EXPR_RESULT 2 [source_file: expected0]
            ASSIGN 2 [source_file: expected0]
                GETPROP 2 [source_file: expected0]
                    NAME F 2 [source_file: expected0]
                    STRING Foo_prototype$a 2 [source_file: expected0]
                NUMBER 0.0 2 [source_file: expected0]
        FUNCTION Bar 2 [source_file: expected0]
            NAME Bar 2 [source_file: expected0]
            PARAM_LIST 2 [source_file: expected0]
            BLOCK 2 [source_file: expected0]
        EXPR_RESULT 2 [source_file: expected0]
            ASSIGN 2 [source_file: expected0]
                GETPROP 2 [source_file: expected0]
                    NAME Bar 2 [source_file: expected0]
                    STRING prototype 2 [source_file: expected0]
                OBJECTLIT 2 [source_file: expected0]
                    GETTER_DEF Bar_prototype$a 2 [source_file: expected0]
                        FUNCTION  2
                            NAME  2
                            PARAM_LIST 2
                            BLOCK 2 [source_file: expected0]
                                RETURN 2 [source_file: expected0]
                                    NUMBER 0.0 2 [source_file: expected0]
                    SETTER_DEF Bar_prototype$a 2 [source_file: expected0]
                        FUNCTION  2
                            NAME  2
                            PARAM_LIST 2
                                NAME b$$1 2 [source_file: expected0]
                            BLOCK 2 [source_file: expected0]
        VAR 3 [source_file: expected0]
            NAME B 3 [source_file: expected0]
                NEW 3 [source_file: expected0]
                    NAME Bar 3 [source_file: expected0]
        EXPR_RESULT 3 [source_file: expected0]
            ASSIGN 3 [source_file: expected0]
                GETPROP 3 [source_file: expected0]
                    NAME B 3 [source_file: expected0]
                    STRING Bar_prototype$a 3 [source_file: expected0]
                NUMBER 0.0 3 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoTypes3(DisambiguatePropertiesTest.java:244)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoTypes4" time="0.003">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype={a:0};var F=new Foo;F.a=0;function Bar(){}Bar.prototype={&quot;a&quot;:0};var B=new Bar;B[&quot;a&quot;]=0&#xa;Result:   function Foo(){}Foo.prototype={a:0};var F=new Foo;F.a=0;function Bar(){}Bar.prototype={&quot;a&quot;:0};var B=new Bar;B[&quot;a&quot;]=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    STRING_KEY a 1 [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;                    STRING prototype 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    STRING_KEY a 1 [quoted: 1] [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETELEM 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype={a:0};var F=new Foo;F.a=0;function Bar(){}Bar.prototype={&quot;a&quot;:0};var B=new Bar;B[&quot;a&quot;]=0
Result:   function Foo(){}Foo.prototype={a:0};var F=new Foo;F.a=0;function Bar(){}Bar.prototype={&quot;a&quot;:0};var B=new Bar;B[&quot;a&quot;]=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    STRING_KEY a 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
                    STRING prototype 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    STRING_KEY a 1 [quoted: 1] [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETELEM 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoTypes4(DisambiguatePropertiesTest.java:270)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoTypes5" time="0.003">
    <failure message="&#xa;Expected: function Foo(){this.Foo$a=0}var F=new Foo;F.Foo$a=0;function Bar(){this.Bar$a=0}var B=new Bar;B.Bar$a=0&#xa;Result:   function Foo(){this.Foo$a=0}var F=new Foo;F.Foo$a=0;function Bar(){this.Bar$a=0}var B=new Bar;B.Bar$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    ASSIGN 1 [source_file: expected0]&#xa;                        GETPROP 1 [source_file: expected0]&#xa;                            THIS 1 [source_file: expected0]&#xa;                            STRING Foo$a 1 [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING Foo$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    ASSIGN 1 [source_file: expected0]&#xa;                        GETPROP 1 [source_file: expected0]&#xa;                            THIS 1 [source_file: expected0]&#xa;                            STRING Bar$a 1 [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING Bar$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, info=LazilyInitializedInfo{templateTypeNames=[T]}, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){this.Foo$a=0}var F=new Foo;F.Foo$a=0;function Bar(){this.Bar$a=0}var B=new Bar;B.Bar$a=0
Result:   function Foo(){this.Foo$a=0}var F=new Foo;F.Foo$a=0;function Bar(){this.Bar$a=0}var B=new Bar;B.Bar$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETPROP 1 [source_file: expected0]
                            THIS 1 [source_file: expected0]
                            STRING Foo$a 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING Foo$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETPROP 1 [source_file: expected0]
                            THIS 1 [source_file: expected0]
                            STRING Bar$a 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING Bar$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, info=LazilyInitializedInfo{templateTypeNames=[T]}, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoTypes5(DisambiguatePropertiesTest.java:290)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoFields" time="0.003">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.a=0;Foo.prototype.b=0;var F=new Foo;F.a=0;F.b=0&#xa;Result:   function Foo(){}Foo.prototype.a=0;Foo.prototype.b=0;var F=new Foo;F.a=0;F.b=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING b 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING b 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.a=0;Foo.prototype.b=0;var F=new Foo;F.a=0;F.b=0
Result:   function Foo(){}Foo.prototype.a=0;Foo.prototype.b=0;var F=new Foo;F.a=0;F.b=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING b 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING b 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoFields(DisambiguatePropertiesTest.java:304)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoSeparateFieldsTwoTypes" time="0.005">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.Foo_prototype$b=0;var F=new Foo;F.Foo_prototype$a=0;F.Foo_prototype$b=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.Bar_prototype$b=0;var B=new Bar;B.Bar_prototype$a=0;B.Bar_prototype$b=0&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.Foo_prototype$b=0;var F=new Foo;F.Foo_prototype$a=0;F.Foo_prototype$b=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.Bar_prototype$b=0;var B=new Bar;B.Bar_prototype$a=0;B.Bar_prototype$b=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$b 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$b 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$b 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$b 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.Foo_prototype$b=0;var F=new Foo;F.Foo_prototype$a=0;F.Foo_prototype$b=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.Bar_prototype$b=0;var B=new Bar;B.Bar_prototype$a=0;B.Bar_prototype$b=0
Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.Foo_prototype$b=0;var F=new Foo;F.Foo_prototype$a=0;F.Foo_prototype$b=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.Bar_prototype$b=0;var B=new Bar;B.Bar_prototype$a=0;B.Bar_prototype$b=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$b 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING Foo_prototype$b 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$b 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING Bar_prototype$b 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTwoSeparateFieldsTwoTypes(DisambiguatePropertiesTest.java:336)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnionType" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testIgnoreUnknownType" time="0.003">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()&#xa;Result:   function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME U 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        RETURN 1 [source_file: expected0]&#xa;                            OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME U 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()
Result:   function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME U 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME U 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testIgnoreUnknownType(DisambiguatePropertiesTest.java:369)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testIgnoreUnknownType1" time="0.003">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()&#xa;Result:   function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME U 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        RETURN 1 [source_file: expected0]&#xa;                            OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME U 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()
Result:   function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;var U=function(){return{}};U().blah()
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME U 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME U 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testIgnoreUnknownType1(DisambiguatePropertiesTest.java:386)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testIgnoreUnknownType2" time="0.004">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;function Bar(){}Bar.prototype.blah=3;var U=function(){return{}};U().blah()&#xa;Result:   function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;function Bar(){}Bar.prototype.blah=3;var U=function(){return{}};U().blah()&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME U 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        RETURN 1 [source_file: expected0]&#xa;                            OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    CALL 1 [free_call: 1] [source_file: expected0]&#xa;                        NAME U 1 [source_file: expected0]&#xa;                    STRING blah 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;function Bar(){}Bar.prototype.blah=3;var U=function(){return{}};U().blah()
Result:   function Foo(){}Foo.prototype.blah=3;var F=new Foo;F.blah=0;function Bar(){}Bar.prototype.blah=3;var U=function(){return{}};U().blah()
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME U 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    CALL 1 [free_call: 1] [source_file: expected0]
                        NAME U 1 [source_file: expected0]
                    STRING blah 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testIgnoreUnknownType2(DisambiguatePropertiesTest.java:407)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnionTypeTwoFields" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testCast" time="0.003">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var F=new Foo;F.Bar_prototype$a=0&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var F=new Foo;F.Bar_prototype$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var F=new Foo;F.Bar_prototype$a=0
Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;var F=new Foo;F.Bar_prototype$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testCast(DisambiguatePropertiesTest.java:443)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testConstructorFields" time="0.002">
    <failure message="&#xa;Expected: var Foo=function(){this.Foo$a=0};function Bar(){}Bar.prototype.Bar_prototype$a=0;new Foo&#xa;Result:   var Foo=function(){this.Foo$a=0};function Bar(){}Bar.prototype.Bar_prototype$a=0;new Foo&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        EXPR_RESULT 1 [source_file: expected0]&#xa;                            ASSIGN 1 [source_file: expected0]&#xa;                                GETPROP 1 [source_file: expected0]&#xa;                                    THIS 1 [source_file: expected0]&#xa;                                    STRING Foo$a 1 [source_file: expected0]&#xa;                                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME Foo 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: VAR 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var Foo=function(){this.Foo$a=0};function Bar(){}Bar.prototype.Bar_prototype$a=0;new Foo
Result:   var Foo=function(){this.Foo$a=0};function Bar(){}Bar.prototype.Bar_prototype$a=0;new Foo
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        EXPR_RESULT 1 [source_file: expected0]
                            ASSIGN 1 [source_file: expected0]
                                GETPROP 1 [source_file: expected0]
                                    THIS 1 [source_file: expected0]
                                    STRING Foo$a 1 [source_file: expected0]
                                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME Foo 1 [source_file: expected0]


JSDoc differs on subtree: VAR 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testConstructorFields(DisambiguatePropertiesTest.java:458)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testStaticProperty" time="0.006">
    <failure message="&#xa;Expected: function Foo(){}function Bar(){}Foo.function__new_Foo___undefined$a=0;Bar.function__new_Bar___undefined$a=0&#xa;Result:   function Foo(){}function Bar(){}Foo.function__new_Foo___undefined$a=0;Bar.function__new_Bar___undefined$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;                    STRING function__new_Foo___undefined$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;                    STRING function__new_Bar___undefined$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}function Bar(){}Foo.function__new_Foo___undefined$a=0;Bar.function__new_Bar___undefined$a=0
Result:   function Foo(){}function Bar(){}Foo.function__new_Foo___undefined$a=0;Bar.function__new_Bar___undefined$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
                    STRING function__new_Foo___undefined$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
                    STRING function__new_Bar___undefined$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testStaticProperty(DisambiguatePropertiesTest.java:473)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSupertypeWithSameField" time="0.005">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Foo_prototype$a=0;var B=new Bar;B.Foo_prototype$a=0;function Baz(){}Baz.prototype.Baz_prototype$a=function(){}&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Foo_prototype$a=0;var B=new Bar;B.Foo_prototype$a=0;function Baz(){}Baz.prototype.Baz_prototype$a=function(){}&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Baz 1 [source_file: expected0]&#xa;            NAME Baz 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Baz 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Baz_prototype$a 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Foo_prototype$a=0;var B=new Bar;B.Foo_prototype$a=0;function Baz(){}Baz.prototype.Baz_prototype$a=function(){}
Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;function Bar(){}Bar.prototype.Foo_prototype$a=0;var B=new Bar;B.Foo_prototype$a=0;function Baz(){}Baz.prototype.Baz_prototype$a=function(){}
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Baz 1 [source_file: expected0]
            NAME Baz 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Baz 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Baz_prototype$a 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSupertypeWithSameField(DisambiguatePropertiesTest.java:494)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testScopedType" time="0.005">
    <failure message="&#xa;Expected: var g={};g.Foo=function(){};g.Foo.prototype.g_Foo_prototype$a=0;g.Bar=function(){};g.Bar.prototype.g_Bar_prototype$a=0&#xa;Result:   var g={};g.Foo=function(){};g.Foo.prototype.g_Foo_prototype$a=0;g.Bar=function(){};g.Bar.prototype.g_Bar_prototype$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME g 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME g 1 [source_file: expected0]&#xa;                    STRING Foo 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        GETPROP 1 [source_file: expected0]&#xa;                            NAME g 1 [source_file: expected0]&#xa;                            STRING Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING g_Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME g 1 [source_file: expected0]&#xa;                    STRING Bar 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        GETPROP 1 [source_file: expected0]&#xa;                            NAME g 1 [source_file: expected0]&#xa;                            STRING Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING g_Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: ASSIGN 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var g={};g.Foo=function(){};g.Foo.prototype.g_Foo_prototype$a=0;g.Bar=function(){};g.Bar.prototype.g_Bar_prototype$a=0
Result:   var g={};g.Foo=function(){};g.Foo.prototype.g_Foo_prototype$a=0;g.Bar=function(){};g.Bar.prototype.g_Bar_prototype$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME g 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME g 1 [source_file: expected0]
                    STRING Foo 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        GETPROP 1 [source_file: expected0]
                            NAME g 1 [source_file: expected0]
                            STRING Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING g_Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME g 1 [source_file: expected0]
                    STRING Bar 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        GETPROP 1 [source_file: expected0]
                            NAME g 1 [source_file: expected0]
                            STRING Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING g_Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: ASSIGN 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testScopedType(DisambiguatePropertiesTest.java:510)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnresolvedType" time="0.008">
    <failure message="&#xa;Expected: var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0&#xa;Result:   var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME g 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: VAR 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0
Result:   var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME g 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: VAR 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:489)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1284)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1279)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testUnresolvedType(DisambiguatePropertiesTest.java:530)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnknownType" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testEnumOfObjects" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUntypedExterns" time="0.009">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.alert=0;Foo.prototype.Foo_prototype$window=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.alert=0;Bar.prototype.Bar_prototype$window=0;window.alert()&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.alert=0;Foo.prototype.Foo_prototype$window=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.alert=0;Bar.prototype.Bar_prototype$window=0;window.alert()&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING alert 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$window 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING alert 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$window 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME window 1 [source_file: expected0]&#xa;                    STRING alert 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.alert=0;Foo.prototype.Foo_prototype$window=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.alert=0;Bar.prototype.Bar_prototype$window=0;window.alert()
Result:   function Foo(){}Foo.prototype.Foo_prototype$a=0;Foo.prototype.alert=0;Foo.prototype.Foo_prototype$window=0;function Bar(){}Bar.prototype.Bar_prototype$a=0;Bar.prototype.alert=0;Bar.prototype.Bar_prototype$window=0;window.alert()
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING alert 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$window 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING alert 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$window 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME window 1 [source_file: expected0]
                    STRING alert 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:489)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1284)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1279)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testUntypedExterns(DisambiguatePropertiesTest.java:698)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnionTypeInvalidation" time="0.006">
    <failure message="&#xa;Expected: function Ind(){this.Ind$a=0}function Foo(){}Foo.prototype.a=0;function Bar(){}Bar.prototype.a=0;var F=new Foo;F.a=1;F=new Bar;var Z=new Baz;Z.a=1;var B=new Baz;B.a=1;B=new Bar&#xa;Result:   function Ind(){this.Ind$a=0}function Foo(){}Foo.prototype.a=0;function Bar(){}Bar.prototype.a=0;var F=new Foo;F.a=1;F=new Bar;var Z=new Baz;Z.a=1;var B=new Baz;B.a=1;B=new Bar&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Ind 1 [source_file: expected0]&#xa;            NAME Ind 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    ASSIGN 1 [source_file: expected0]&#xa;                        GETPROP 1 [source_file: expected0]&#xa;                            THIS 1 [source_file: expected0]&#xa;                            STRING Ind$a 1 [source_file: expected0]&#xa;                        NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME F 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 1.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                NAME F 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME Z 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Baz 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Z 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 1.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Baz 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME B 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 1.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                NAME B 1 [source_file: expected0]&#xa;                NEW 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Ind 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Ind(){this.Ind$a=0}function Foo(){}Foo.prototype.a=0;function Bar(){}Bar.prototype.a=0;var F=new Foo;F.a=1;F=new Bar;var Z=new Baz;Z.a=1;var B=new Baz;B.a=1;B=new Bar
Result:   function Ind(){this.Ind$a=0}function Foo(){}Foo.prototype.a=0;function Bar(){}Bar.prototype.a=0;var F=new Foo;F.a=1;F=new Bar;var Z=new Baz;Z.a=1;var B=new Baz;B.a=1;B=new Bar
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Ind 1 [source_file: expected0]
            NAME Ind 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    ASSIGN 1 [source_file: expected0]
                        GETPROP 1 [source_file: expected0]
                            THIS 1 [source_file: expected0]
                            STRING Ind$a 1 [source_file: expected0]
                        NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME F 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME F 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME Z 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Baz 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Z 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Baz 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME B 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 1.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                NAME B 1 [source_file: expected0]
                NEW 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Ind 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:489)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1284)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1279)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testUnionTypeInvalidation(DisambiguatePropertiesTest.java:739)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnionAndExternTypes" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTypedExterns" time="0.004">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$alert=0;window.alert(&quot;blarg&quot;)&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$alert=0;window.alert(&quot;blarg&quot;)&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$alert 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME window 1 [source_file: expected0]&#xa;                    STRING alert 1 [source_file: expected0]&#xa;                STRING blarg 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$alert=0;window.alert(&quot;blarg&quot;)
Result:   function Foo(){}Foo.prototype.Foo_prototype$alert=0;window.alert(&quot;blarg&quot;)
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$alert 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME window 1 [source_file: expected0]
                    STRING alert 1 [source_file: expected0]
                STRING blarg 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:489)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1284)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1279)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testTypedExterns(DisambiguatePropertiesTest.java:786)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSubtypesWithSameField" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSupertypeReferenceOfSubtypeProperty" time="0.004">
    <failure message="&#xa;Expected: function Foo(){}function Bar(){}Bar.prototype.Bar_prototype$a;function foo(foo$$1){var x=foo$$1.Bar_prototype$a}&#xa;Result:   function Foo(){}function Bar(){}Bar.prototype.Bar_prototype$a;function foo(foo$$1){var x=foo$$1.Bar_prototype$a}&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        FUNCTION Bar 2 [source_file: expected0]&#xa;            NAME Bar 2 [source_file: expected0]&#xa;            PARAM_LIST 2 [source_file: expected0]&#xa;            BLOCK 2 [source_file: expected0]&#xa;        EXPR_RESULT 3 [source_file: expected0]&#xa;            GETPROP 3 [source_file: expected0]&#xa;                GETPROP 3 [source_file: expected0]&#xa;                    NAME Bar 3 [source_file: expected0]&#xa;                    STRING prototype 3 [source_file: expected0]&#xa;                STRING Bar_prototype$a 3 [source_file: expected0]&#xa;        FUNCTION foo 4 [source_file: expected0]&#xa;            NAME foo 4 [source_file: expected0]&#xa;            PARAM_LIST 4 [source_file: expected0]&#xa;                NAME foo$$1 4 [source_file: expected0]&#xa;            BLOCK 4 [source_file: expected0]&#xa;                VAR 5 [source_file: expected0]&#xa;                    NAME x 5 [source_file: expected0]&#xa;                        GETPROP 5 [source_file: expected0]&#xa;                            NAME foo$$1 5 [source_file: expected0]&#xa;                            STRING Bar_prototype$a 5 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}function Bar(){}Bar.prototype.Bar_prototype$a;function foo(foo$$1){var x=foo$$1.Bar_prototype$a}
Result:   function Foo(){}function Bar(){}Bar.prototype.Bar_prototype$a;function foo(foo$$1){var x=foo$$1.Bar_prototype$a}
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        FUNCTION Bar 2 [source_file: expected0]
            NAME Bar 2 [source_file: expected0]
            PARAM_LIST 2 [source_file: expected0]
            BLOCK 2 [source_file: expected0]
        EXPR_RESULT 3 [source_file: expected0]
            GETPROP 3 [source_file: expected0]
                GETPROP 3 [source_file: expected0]
                    NAME Bar 3 [source_file: expected0]
                    STRING prototype 3 [source_file: expected0]
                STRING Bar_prototype$a 3 [source_file: expected0]
        FUNCTION foo 4 [source_file: expected0]
            NAME foo 4 [source_file: expected0]
            PARAM_LIST 4 [source_file: expected0]
                NAME foo$$1 4 [source_file: expected0]
            BLOCK 4 [source_file: expected0]
                VAR 5 [source_file: expected0]
                    NAME x 5 [source_file: expected0]
                        GETPROP 5 [source_file: expected0]
                            NAME foo$$1 5 [source_file: expected0]
                            STRING Bar_prototype$a 5 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:489)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1284)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1279)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSupertypeReferenceOfSubtypeProperty(DisambiguatePropertiesTest.java:824)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testObjectLiteralNotRenamed" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testObjectLiteralReflected" time="0.008">
    <failure message="&#xa;Expected: var goog={};goog.reflect={};goog.reflect.object=function(x,y){return y};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;goog.reflect.object(F,{F_prototype$foo:5})&#xa;Result:   var goog={};goog.reflect={};goog.reflect.object=function(x,y){return y};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;goog.reflect.object(F,{F_prototype$foo:5})&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME goog 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME goog 1 [source_file: expected0]&#xa;                    STRING reflect 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME goog 1 [source_file: expected0]&#xa;                        STRING reflect 1 [source_file: expected0]&#xa;                    STRING object 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                        NAME x 1 [source_file: expected0]&#xa;                        NAME y 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        RETURN 1 [source_file: expected0]&#xa;                            NAME y 1 [source_file: expected0]&#xa;        FUNCTION F 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME F 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING F_prototype$foo 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        FUNCTION G 1 [source_file: expected0]&#xa;            NAME G 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME G 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING G_prototype$foo 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME goog 1 [source_file: expected0]&#xa;                        STRING reflect 1 [source_file: expected0]&#xa;                    STRING object 1 [source_file: expected0]&#xa;                NAME F 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    STRING_KEY F_prototype$foo 1 [source_file: expected0]&#xa;                        NUMBER 5.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION F 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var goog={};goog.reflect={};goog.reflect.object=function(x,y){return y};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;goog.reflect.object(F,{F_prototype$foo:5})
Result:   var goog={};goog.reflect={};goog.reflect.object=function(x,y){return y};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;goog.reflect.object(F,{F_prototype$foo:5})
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME goog 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME goog 1 [source_file: expected0]
                    STRING reflect 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME goog 1 [source_file: expected0]
                        STRING reflect 1 [source_file: expected0]
                    STRING object 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                        NAME y 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            NAME y 1 [source_file: expected0]
        FUNCTION F 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME F 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING F_prototype$foo 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        FUNCTION G 1 [source_file: expected0]
            NAME G 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME G 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING G_prototype$foo 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME goog 1 [source_file: expected0]
                        STRING reflect 1 [source_file: expected0]
                    STRING object 1 [source_file: expected0]
                NAME F 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    STRING_KEY F_prototype$foo 1 [source_file: expected0]
                        NUMBER 5.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION F 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testObjectLiteralReflected(DisambiguatePropertiesTest.java:853)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testObjectLiteralLends" time="0.007">
    <failure message="&#xa;Expected: var mixin=function(x){return x};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;mixin({F_prototype$foo:5})&#xa;Result:   var mixin=function(x){return x};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;mixin({F_prototype$foo:5})&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME mixin 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                        NAME x 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;                        RETURN 1 [source_file: expected0]&#xa;                            NAME x 1 [source_file: expected0]&#xa;        FUNCTION F 1 [source_file: expected0]&#xa;            NAME F 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME F 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING F_prototype$foo 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        FUNCTION G 1 [source_file: expected0]&#xa;            NAME G 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME G 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING G_prototype$foo 1 [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME mixin 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [jsdoc_info: JSDocInfo] [source_file: expected0]&#xa;                    STRING_KEY F_prototype$foo 1 [source_file: expected0]&#xa;                        NUMBER 5.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION F 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var mixin=function(x){return x};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;mixin({F_prototype$foo:5})
Result:   var mixin=function(x){return x};function F(){}F.prototype.F_prototype$foo=3;function G(){}G.prototype.G_prototype$foo=3;mixin({F_prototype$foo:5})
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME mixin 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                        NAME x 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
                        RETURN 1 [source_file: expected0]
                            NAME x 1 [source_file: expected0]
        FUNCTION F 1 [source_file: expected0]
            NAME F 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME F 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING F_prototype$foo 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        FUNCTION G 1 [source_file: expected0]
            NAME G 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME G 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING G_prototype$foo 1 [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME mixin 1 [source_file: expected0]
                OBJECTLIT 1 [jsdoc_info: JSDocInfo] [source_file: expected0]
                    STRING_KEY F_prototype$foo 1 [source_file: expected0]
                        NUMBER 5.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION F 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testObjectLiteralLends(DisambiguatePropertiesTest.java:871)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testClosureInherits" time="0.013" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSkipNativeFunctionMethod" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSkipNativeObjectMethod" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testExtendNativeType" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testStringFunction" time="0.006">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$foo=function(){};String.prototype.String_prototype$foo=function(){};var a=&quot;str&quot;.toString().String_prototype$foo()&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$foo=function(){};String.prototype.String_prototype$foo=function(){};var a=&quot;str&quot;.toString().String_prototype$foo()&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EMPTY 1 [source_file: expected0]&#xa;        EXPR_RESULT 2 [source_file: expected0]&#xa;            ASSIGN 2 [source_file: expected0]&#xa;                GETPROP 2 [source_file: expected0]&#xa;                    GETPROP 2 [source_file: expected0]&#xa;                        NAME Foo 2 [source_file: expected0]&#xa;                        STRING prototype 2 [source_file: expected0]&#xa;                    STRING Foo_prototype$foo 2 [source_file: expected0]&#xa;                FUNCTION  2 [source_file: expected0]&#xa;                    NAME  2 [source_file: expected0]&#xa;                    PARAM_LIST 2 [source_file: expected0]&#xa;                    BLOCK 2 [source_file: expected0]&#xa;        EXPR_RESULT 3 [source_file: expected0]&#xa;            ASSIGN 3 [source_file: expected0]&#xa;                GETPROP 3 [source_file: expected0]&#xa;                    GETPROP 3 [source_file: expected0]&#xa;                        NAME String 3 [source_file: expected0]&#xa;                        STRING prototype 3 [source_file: expected0]&#xa;                    STRING String_prototype$foo 3 [source_file: expected0]&#xa;                FUNCTION  3 [source_file: expected0]&#xa;                    NAME  3 [source_file: expected0]&#xa;                    PARAM_LIST 3 [source_file: expected0]&#xa;                    BLOCK 3 [source_file: expected0]&#xa;        VAR 4 [source_file: expected0]&#xa;            NAME a 4 [source_file: expected0]&#xa;                CALL 4 [source_file: expected0]&#xa;                    GETPROP 4 [source_file: expected0]&#xa;                        CALL 4 [source_file: expected0]&#xa;                            GETPROP 4 [source_file: expected0]&#xa;                                STRING str 4 [source_file: expected0]&#xa;                                STRING toString 4 [source_file: expected0]&#xa;                        STRING String_prototype$foo 4 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$foo=function(){};String.prototype.String_prototype$foo=function(){};var a=&quot;str&quot;.toString().String_prototype$foo()
Result:   function Foo(){}Foo.prototype.Foo_prototype$foo=function(){};String.prototype.String_prototype$foo=function(){};var a=&quot;str&quot;.toString().String_prototype$foo()
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EMPTY 1 [source_file: expected0]
        EXPR_RESULT 2 [source_file: expected0]
            ASSIGN 2 [source_file: expected0]
                GETPROP 2 [source_file: expected0]
                    GETPROP 2 [source_file: expected0]
                        NAME Foo 2 [source_file: expected0]
                        STRING prototype 2 [source_file: expected0]
                    STRING Foo_prototype$foo 2 [source_file: expected0]
                FUNCTION  2 [source_file: expected0]
                    NAME  2 [source_file: expected0]
                    PARAM_LIST 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
        EXPR_RESULT 3 [source_file: expected0]
            ASSIGN 3 [source_file: expected0]
                GETPROP 3 [source_file: expected0]
                    GETPROP 3 [source_file: expected0]
                        NAME String 3 [source_file: expected0]
                        STRING prototype 3 [source_file: expected0]
                    STRING String_prototype$foo 3 [source_file: expected0]
                FUNCTION  3 [source_file: expected0]
                    NAME  3 [source_file: expected0]
                    PARAM_LIST 3 [source_file: expected0]
                    BLOCK 3 [source_file: expected0]
        VAR 4 [source_file: expected0]
            NAME a 4 [source_file: expected0]
                CALL 4 [source_file: expected0]
                    GETPROP 4 [source_file: expected0]
                        CALL 4 [source_file: expected0]
                            GETPROP 4 [source_file: expected0]
                                STRING str 4 [source_file: expected0]
                                STRING toString 4 [source_file: expected0]
                        STRING String_prototype$foo 4 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:489)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1284)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1279)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testStringFunction(DisambiguatePropertiesTest.java:961)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnusedTypeInExterns" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testInterface" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testInterfaceOfSuperclass" time="0.004" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testTwoInterfacesWithSomeInheritance" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testInvalidatingInterface" time="0.013" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testMultipleInterfaces" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testInterfaceWithSupertypeImplementor" time="0.008" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSuperInterface" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testInterfaceUnionWithCtor" time="0.019" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testExternInterfaceUnionWithCtor" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testMismatchInvalidation" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testBadCast" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testDeterministicNaming" time="0.008">
    <failure message="&#xa;Expected: function A(){}A.prototype.A_prototype$f=function(){return&quot;a&quot;};function B(){}B.prototype.A_prototype$f=function(){return&quot;b&quot;};function C(){}C.prototype.C_prototype$f=function(){return&quot;c&quot;};var ab=1?new B:new A;var n=ab.A_prototype$f()&#xa;Result:   function A(){}A.prototype.A_prototype$f=function(){return&quot;a&quot;};function B(){}B.prototype.A_prototype$f=function(){return&quot;b&quot;};function C(){}C.prototype.C_prototype$f=function(){return&quot;c&quot;};var ab=1?new B:new A;var n=ab.A_prototype$f()&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION A 1 [source_file: expected0]&#xa;            NAME A 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 2 [source_file: expected0]&#xa;            ASSIGN 2 [source_file: expected0]&#xa;                GETPROP 2 [source_file: expected0]&#xa;                    GETPROP 2 [source_file: expected0]&#xa;                        NAME A 2 [source_file: expected0]&#xa;                        STRING prototype 2 [source_file: expected0]&#xa;                    STRING A_prototype$f 2 [source_file: expected0]&#xa;                FUNCTION  2 [source_file: expected0]&#xa;                    NAME  2 [source_file: expected0]&#xa;                    PARAM_LIST 2 [source_file: expected0]&#xa;                    BLOCK 2 [source_file: expected0]&#xa;                        RETURN 2 [source_file: expected0]&#xa;                            STRING a 2 [source_file: expected0]&#xa;        FUNCTION B 3 [source_file: expected0]&#xa;            NAME B 3 [source_file: expected0]&#xa;            PARAM_LIST 3 [source_file: expected0]&#xa;            BLOCK 3 [source_file: expected0]&#xa;        EXPR_RESULT 4 [source_file: expected0]&#xa;            ASSIGN 4 [source_file: expected0]&#xa;                GETPROP 4 [source_file: expected0]&#xa;                    GETPROP 4 [source_file: expected0]&#xa;                        NAME B 4 [source_file: expected0]&#xa;                        STRING prototype 4 [source_file: expected0]&#xa;                    STRING A_prototype$f 4 [source_file: expected0]&#xa;                FUNCTION  4 [source_file: expected0]&#xa;                    NAME  4 [source_file: expected0]&#xa;                    PARAM_LIST 4 [source_file: expected0]&#xa;                    BLOCK 4 [source_file: expected0]&#xa;                        RETURN 4 [source_file: expected0]&#xa;                            STRING b 4 [source_file: expected0]&#xa;        FUNCTION C 5 [source_file: expected0]&#xa;            NAME C 5 [source_file: expected0]&#xa;            PARAM_LIST 5 [source_file: expected0]&#xa;            BLOCK 5 [source_file: expected0]&#xa;        EXPR_RESULT 6 [source_file: expected0]&#xa;            ASSIGN 6 [source_file: expected0]&#xa;                GETPROP 6 [source_file: expected0]&#xa;                    GETPROP 6 [source_file: expected0]&#xa;                        NAME C 6 [source_file: expected0]&#xa;                        STRING prototype 6 [source_file: expected0]&#xa;                    STRING C_prototype$f 6 [source_file: expected0]&#xa;                FUNCTION  6 [source_file: expected0]&#xa;                    NAME  6 [source_file: expected0]&#xa;                    PARAM_LIST 6 [source_file: expected0]&#xa;                    BLOCK 6 [source_file: expected0]&#xa;                        RETURN 6 [source_file: expected0]&#xa;                            STRING c 6 [source_file: expected0]&#xa;        VAR 7 [source_file: expected0]&#xa;            NAME ab 7 [source_file: expected0]&#xa;                HOOK 7 [source_file: expected0]&#xa;                    NUMBER 1.0 7 [source_file: expected0]&#xa;                    NEW 7 [source_file: expected0]&#xa;                        NAME B 7 [source_file: expected0]&#xa;                    NEW 7 [source_file: expected0]&#xa;                        NAME A 7 [source_file: expected0]&#xa;        VAR 7 [source_file: expected0]&#xa;            NAME n 7 [source_file: expected0]&#xa;                CALL 7 [source_file: expected0]&#xa;                    GETPROP 7 [source_file: expected0]&#xa;                        NAME ab 7 [source_file: expected0]&#xa;                        STRING A_prototype$f 7 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION A 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function A(){}A.prototype.A_prototype$f=function(){return&quot;a&quot;};function B(){}B.prototype.A_prototype$f=function(){return&quot;b&quot;};function C(){}C.prototype.C_prototype$f=function(){return&quot;c&quot;};var ab=1?new B:new A;var n=ab.A_prototype$f()
Result:   function A(){}A.prototype.A_prototype$f=function(){return&quot;a&quot;};function B(){}B.prototype.A_prototype$f=function(){return&quot;b&quot;};function C(){}C.prototype.C_prototype$f=function(){return&quot;c&quot;};var ab=1?new B:new A;var n=ab.A_prototype$f()
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION A 1 [source_file: expected0]
            NAME A 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 2 [source_file: expected0]
            ASSIGN 2 [source_file: expected0]
                GETPROP 2 [source_file: expected0]
                    GETPROP 2 [source_file: expected0]
                        NAME A 2 [source_file: expected0]
                        STRING prototype 2 [source_file: expected0]
                    STRING A_prototype$f 2 [source_file: expected0]
                FUNCTION  2 [source_file: expected0]
                    NAME  2 [source_file: expected0]
                    PARAM_LIST 2 [source_file: expected0]
                    BLOCK 2 [source_file: expected0]
                        RETURN 2 [source_file: expected0]
                            STRING a 2 [source_file: expected0]
        FUNCTION B 3 [source_file: expected0]
            NAME B 3 [source_file: expected0]
            PARAM_LIST 3 [source_file: expected0]
            BLOCK 3 [source_file: expected0]
        EXPR_RESULT 4 [source_file: expected0]
            ASSIGN 4 [source_file: expected0]
                GETPROP 4 [source_file: expected0]
                    GETPROP 4 [source_file: expected0]
                        NAME B 4 [source_file: expected0]
                        STRING prototype 4 [source_file: expected0]
                    STRING A_prototype$f 4 [source_file: expected0]
                FUNCTION  4 [source_file: expected0]
                    NAME  4 [source_file: expected0]
                    PARAM_LIST 4 [source_file: expected0]
                    BLOCK 4 [source_file: expected0]
                        RETURN 4 [source_file: expected0]
                            STRING b 4 [source_file: expected0]
        FUNCTION C 5 [source_file: expected0]
            NAME C 5 [source_file: expected0]
            PARAM_LIST 5 [source_file: expected0]
            BLOCK 5 [source_file: expected0]
        EXPR_RESULT 6 [source_file: expected0]
            ASSIGN 6 [source_file: expected0]
                GETPROP 6 [source_file: expected0]
                    GETPROP 6 [source_file: expected0]
                        NAME C 6 [source_file: expected0]
                        STRING prototype 6 [source_file: expected0]
                    STRING C_prototype$f 6 [source_file: expected0]
                FUNCTION  6 [source_file: expected0]
                    NAME  6 [source_file: expected0]
                    PARAM_LIST 6 [source_file: expected0]
                    BLOCK 6 [source_file: expected0]
                        RETURN 6 [source_file: expected0]
                            STRING c 6 [source_file: expected0]
        VAR 7 [source_file: expected0]
            NAME ab 7 [source_file: expected0]
                HOOK 7 [source_file: expected0]
                    NUMBER 1.0 7 [source_file: expected0]
                    NEW 7 [source_file: expected0]
                        NAME B 7 [source_file: expected0]
                    NEW 7 [source_file: expected0]
                        NAME A 7 [source_file: expected0]
        VAR 7 [source_file: expected0]
            NAME n 7 [source_file: expected0]
                CALL 7 [source_file: expected0]
                    GETPROP 7 [source_file: expected0]
                        NAME ab 7 [source_file: expected0]
                        STRING A_prototype$f 7 [source_file: expected0]


JSDoc differs on subtree: FUNCTION A 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testDeterministicNaming(DisambiguatePropertiesTest.java:1165)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testObjectLiteral" time="0.009">
    <failure message="&#xa;Expected: function Foo(){}Foo.prototype.Foo_prototype$a;function Bar(){}Bar.prototype.Bar_prototype$a;var F={Foo_prototype$a:&quot;a&quot;}&#xa;Result:   function Foo(){}Foo.prototype.Foo_prototype$a;function Bar(){}Bar.prototype.Bar_prototype$a;var F={Foo_prototype$a:&quot;a&quot;}&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 2 [source_file: expected0]&#xa;            GETPROP 2 [source_file: expected0]&#xa;                GETPROP 2 [source_file: expected0]&#xa;                    NAME Foo 2 [source_file: expected0]&#xa;                    STRING prototype 2 [source_file: expected0]&#xa;                STRING Foo_prototype$a 2 [source_file: expected0]&#xa;        FUNCTION Bar 3 [source_file: expected0]&#xa;            NAME Bar 3 [source_file: expected0]&#xa;            PARAM_LIST 3 [source_file: expected0]&#xa;            BLOCK 3 [source_file: expected0]&#xa;        EXPR_RESULT 4 [source_file: expected0]&#xa;            GETPROP 4 [source_file: expected0]&#xa;                GETPROP 4 [source_file: expected0]&#xa;                    NAME Bar 4 [source_file: expected0]&#xa;                    STRING prototype 4 [source_file: expected0]&#xa;                STRING Bar_prototype$a 4 [source_file: expected0]&#xa;        VAR 5 [source_file: expected0]&#xa;            NAME F 5 [source_file: expected0]&#xa;                OBJECTLIT 5 [source_file: expected0]&#xa;                    STRING_KEY Foo_prototype$a 5 [source_file: expected0]&#xa;                        STRING a 5 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function Foo(){}Foo.prototype.Foo_prototype$a;function Bar(){}Bar.prototype.Bar_prototype$a;var F={Foo_prototype$a:&quot;a&quot;}
Result:   function Foo(){}Foo.prototype.Foo_prototype$a;function Bar(){}Bar.prototype.Bar_prototype$a;var F={Foo_prototype$a:&quot;a&quot;}
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 2 [source_file: expected0]
            GETPROP 2 [source_file: expected0]
                GETPROP 2 [source_file: expected0]
                    NAME Foo 2 [source_file: expected0]
                    STRING prototype 2 [source_file: expected0]
                STRING Foo_prototype$a 2 [source_file: expected0]
        FUNCTION Bar 3 [source_file: expected0]
            NAME Bar 3 [source_file: expected0]
            PARAM_LIST 3 [source_file: expected0]
            BLOCK 3 [source_file: expected0]
        EXPR_RESULT 4 [source_file: expected0]
            GETPROP 4 [source_file: expected0]
                GETPROP 4 [source_file: expected0]
                    NAME Bar 4 [source_file: expected0]
                    STRING prototype 4 [source_file: expected0]
                STRING Bar_prototype$a 4 [source_file: expected0]
        VAR 5 [source_file: expected0]
            NAME F 5 [source_file: expected0]
                OBJECTLIT 5 [source_file: expected0]
                    STRING_KEY Foo_prototype$a 5 [source_file: expected0]
                        STRING a 5 [source_file: expected0]


JSDoc differs on subtree: FUNCTION Foo 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testObjectLiteral(DisambiguatePropertiesTest.java:1182)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testCustomInherits" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testSkipNativeFunctionStaticProperty" time="0.005">
    <failure message="&#xa;Expected: function addSingletonGetter(ctor){ctor.a}function Foo(){}Foo.a=0;function Bar(){}Bar.a=0&#xa;Result:   function addSingletonGetter(ctor){ctor.a}function Foo(){}Foo.a=0;function Bar(){}Bar.a=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        FUNCTION addSingletonGetter 1 [source_file: expected0]&#xa;            NAME addSingletonGetter 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;                NAME ctor 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;                EXPR_RESULT 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME ctor 1 [source_file: expected0]&#xa;                        STRING a 1 [source_file: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Foo 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        FUNCTION Bar 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME Bar 1 [source_file: expected0]&#xa;                    STRING a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: FUNCTION addSingletonGetter 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{info=LazilyInitializedInfo{parameters={ctor=type: BANG 1 [source_file: testcode] : Function}}, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: function addSingletonGetter(ctor){ctor.a}function Foo(){}Foo.a=0;function Bar(){}Bar.a=0
Result:   function addSingletonGetter(ctor){ctor.a}function Foo(){}Foo.a=0;function Bar(){}Bar.a=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        FUNCTION addSingletonGetter 1 [source_file: expected0]
            NAME addSingletonGetter 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME ctor 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
                EXPR_RESULT 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME ctor 1 [source_file: expected0]
                        STRING a 1 [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Foo 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        FUNCTION Bar 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME Bar 1 [source_file: expected0]
                    STRING a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: FUNCTION addSingletonGetter 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{info=LazilyInitializedInfo{parameters={ctor=type: BANG 1 [source_file: testcode] : Function}}, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSkipNativeFunctionStaticProperty(DisambiguatePropertiesTest.java:1221)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testErrorOnProtectedProperty" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testMismatchForbiddenInvalidation" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testUnionTypeInvalidationError" time="0.005" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testEnumOfObjects2" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testEnumOfObjects3" time="0.01" />
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testNamedType" time="0.009">
    <failure message="&#xa;Expected: var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0;g.Late=function(){}&#xa;Result:   var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0;g.Late=function(){}&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME g 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME Bar 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Bar 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Bar_prototype$a 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME g 1 [source_file: expected0]&#xa;                    STRING Late 1 [source_file: expected0]&#xa;                FUNCTION  1 [source_file: expected0]&#xa;                    NAME  1 [source_file: expected0]&#xa;                    PARAM_LIST 1 [source_file: expected0]&#xa;                    BLOCK 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: VAR 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=2, info=LazilyInitializedInfo{baseType=type: BANG 2 [source_file: testcode] : g.Late}, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0;g.Late=function(){}
Result:   var g={};var Foo=function(){};Foo.prototype.Foo_prototype$a=0;var Bar=function(){};Bar.prototype.Bar_prototype$a=0;g.Late=function(){}
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME g 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME Bar 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Bar 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Bar_prototype$a 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME g 1 [source_file: expected0]
                    STRING Late 1 [source_file: expected0]
                FUNCTION  1 [source_file: expected0]
                    NAME  1 [source_file: expected0]
                    PARAM_LIST 1 [source_file: expected0]
                    BLOCK 1 [source_file: expected0]


JSDoc differs on subtree: VAR 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=2, info=LazilyInitializedInfo{baseType=type: BANG 2 [source_file: testcode] : g.Late}, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testNamedType(DisambiguatePropertiesTest.java:549)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.DisambiguatePropertiesTest" name="testEnum" time="0.003">
    <failure message="&#xa;Expected: var En={A:&quot;first&quot;,B:&quot;second&quot;};var EA=En.A;var EB=En.B;function Foo(){}Foo.prototype.Foo_prototype$A=0;Foo.prototype.Foo_prototype$B=0&#xa;Result:   var En={A:&quot;first&quot;,B:&quot;second&quot;};var EA=En.A;var EB=En.B;function Foo(){}Foo.prototype.Foo_prototype$A=0;Foo.prototype.Foo_prototype$B=0&#xa;Node tree inequality:&#xa;Tree:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME En 1 [source_file: expected0]&#xa;                OBJECTLIT 1 [source_file: expected0]&#xa;                    STRING_KEY A 1 [is_constant_name: 1] [source_file: expected0]&#xa;                        STRING first 1 [source_file: expected0]&#xa;                    STRING_KEY B 1 [is_constant_name: 1] [source_file: expected0]&#xa;                        STRING second 1 [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME EA 1 [is_constant_name: 1] [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME En 1 [source_file: expected0]&#xa;                    STRING A 1 [is_constant_name: 1] [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME EB 1 [is_constant_name: 1] [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    NAME En 1 [source_file: expected0]&#xa;                    STRING B 1 [is_constant_name: 1] [source_file: expected0]&#xa;        FUNCTION Foo 1 [source_file: expected0]&#xa;            NAME Foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EMPTY 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$A 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            ASSIGN 1 [source_file: expected0]&#xa;                GETPROP 1 [source_file: expected0]&#xa;                    GETPROP 1 [source_file: expected0]&#xa;                        NAME Foo 1 [source_file: expected0]&#xa;                        STRING prototype 1 [source_file: expected0]&#xa;                    STRING Foo_prototype$B 1 [source_file: expected0]&#xa;                NUMBER 0.0 1 [source_file: expected0]&#xa;&#xa;&#xa;JSDoc differs on subtree: VAR 1 [source_file: expected0]&#xa;Expected JSDoc: (none)&#xa;Actual JSDoc  : JSDocInfo{bitset=60000000, type=type: STRING string 1 [source_file: testcode] [length: 6] : string, visibility=INHERITED}" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var En={A:&quot;first&quot;,B:&quot;second&quot;};var EA=En.A;var EB=En.B;function Foo(){}Foo.prototype.Foo_prototype$A=0;Foo.prototype.Foo_prototype$B=0
Result:   var En={A:&quot;first&quot;,B:&quot;second&quot;};var EA=En.A;var EB=En.B;function Foo(){}Foo.prototype.Foo_prototype$A=0;Foo.prototype.Foo_prototype$B=0
Node tree inequality:
Tree:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME En 1 [source_file: expected0]
                OBJECTLIT 1 [source_file: expected0]
                    STRING_KEY A 1 [is_constant_name: 1] [source_file: expected0]
                        STRING first 1 [source_file: expected0]
                    STRING_KEY B 1 [is_constant_name: 1] [source_file: expected0]
                        STRING second 1 [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME EA 1 [is_constant_name: 1] [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME En 1 [source_file: expected0]
                    STRING A 1 [is_constant_name: 1] [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME EB 1 [is_constant_name: 1] [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    NAME En 1 [source_file: expected0]
                    STRING B 1 [is_constant_name: 1] [source_file: expected0]
        FUNCTION Foo 1 [source_file: expected0]
            NAME Foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EMPTY 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$A 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            ASSIGN 1 [source_file: expected0]
                GETPROP 1 [source_file: expected0]
                    GETPROP 1 [source_file: expected0]
                        NAME Foo 1 [source_file: expected0]
                        STRING prototype 1 [source_file: expected0]
                    STRING Foo_prototype$B 1 [source_file: expected0]
                NUMBER 0.0 1 [source_file: expected0]


JSDoc differs on subtree: VAR 1 [source_file: expected0]
Expected JSDoc: (none)
Actual JSDoc  : JSDocInfo{bitset=60000000, type=type: STRING string 1 [source_file: testcode] [length: 6] : string, visibility=INHERITED}
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testSets(DisambiguatePropertiesTest.java:1272)
	at com.google.javascript.jscomp.DisambiguatePropertiesTest.testEnum(DisambiguatePropertiesTest.java:581)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
