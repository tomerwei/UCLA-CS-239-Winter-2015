<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="13" failures="2" hostname="cs-210-206.cs.ucla.edu" name="com.google.javascript.jscomp.OptimizeParametersTest" skipped="0" tests="56" time="0.107" timestamp="2015-03-09T03:17:33">
  <properties>
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="lib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib" />
    <property name="refasterjs-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs.jar" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="os.name" value="Mac OS X" />
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/classes" />
    <property name="maven-repository-id" value="sonatype-nexus-staging" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.home" value="//Users/linmanna/ant" />
    <property name="java.runtime.version" value="1.7.0_75-b13" />
    <property name="gen.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/gen" />
    <property name="user.name" value="linmanna" />
    <property name="ant.file.compiler" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="ant.build.javac.target" value="1.7" />
    <property name="user.language" value="zh" />
    <property name="test.method" value="" />
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib" />
    <property name="ant.project.default-target" value="jar" />
    <property name="ant.project.name" value="compiler" />
    <property name="java.version" value="1.7.0_75" />
    <property name="user.timezone" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/endorsed" />
    <property name="sun.cpu.isalist" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="file.separator" value="/" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="protoc.executable" value="protoc" />
    <property name="classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes" />
    <property name="java.class.version" value="51.0" />
    <property name="testClasses.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test" />
    <property name="user.country" value="CN" />
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="externs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/externs" />
    <property name="ant.file" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build.xml" />
    <property name="os.version" value="10.9.5" />
    <property name="javac.debug" value="on" />
    <property name="path.separator" value=":" />
    <property name="java.vm.version" value="24.75-b04" />
    <property name="ant.library.dir" value="//Users/linmanna/ant/lib" />
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob" />
    <property name="webservice-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice.jar" />
    <property name="sun.io.unicode.encoding" value="UnicodeBig" />
    <property name="test.fork" value="true" />
    <property name="webservice.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/jscomp/webservice" />
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit" />
    <property name="buildlib.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/lib" />
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16" />
    <property name="ant.build.javac.source" value="1.7" />
    <property name="refasterjs.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src/com/google/javascript/refactoring" />
    <property name="user.home" value="/Users/linmanna" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="test.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/test" />
    <property name="java.library.path" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:." />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="gopherProxySet" value="false" />
    <property name="build.relVersion" value="00e3533" />
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner testsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junittestcases4622356093930181862.properties skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false formatter=org.apache.tools.ant.taskdefs.optional.junit.SummaryJUnitResultFormatter showoutput=true outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/testoutput/IGNORETHIS.xml crashfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junitvmwatcher882389895192408063.properties propsfile=/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/junit6374663990081372210.properties" />
    <property name="java.class.path" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/classes:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant-launcher.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/ant.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/args4j.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/gson.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/guava.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/jsr305.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/junit.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/protobuf-java.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/lib/truth.jar:/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/test:/Users/linmanna/ant/lib/ant-launcher.jar:/Users/linmanna/ant/lib/ant.jar:/Users/linmanna/ant/lib/ant-junit.jar:/Users/linmanna/ant/lib/ant-junit4.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.4 compiled on April 29 2014" />
    <property name="test.class" value="*Test" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="ant.file.type" value="file" />
    <property name="java.vm.specification.version" value="1.7" />
    <property name="sun.cpu.endian" value="little" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="java.io.tmpdir" value="/var/folders/_p/3swdt4h96dn79vyt21dtny9h0000gn/T/" />
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/" />
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment" />
    <property name="maven-repository-url" value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <property name="os.arch" value="x86_64" />
    <property name="webservice-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/webservice-classes" />
    <property name="java.ext.dirs" value="/Users/linmanna/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java" />
    <property name="user.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.file.type.compiler" value="file" />
    <property name="line.separator" value="&#xa;" />
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM" />
    <property name="refasterjs-classes.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/refasterjs-classes" />
    <property name="basedir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler" />
    <property name="ant.java.version" value="1.7" />
    <property name="ant.core.lib" value="/Users/linmanna/ant/lib/ant.jar" />
    <property name="file.encoding" value="UTF-8" />
    <property name="closure.build.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build" />
    <property name="compiler-jarfile" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/compiler.jar" />
    <property name="java.specification.version" value="1.7" />
    <property name="src.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/src" />
    <property name="ant.project.invoked-targets" value="clean,compile,compile-tests,test" />
    <property name="javadoc.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/build/javadoc" />
    <property name="tools.dir" value="/Users/linmanna/Documents/proj/UCLA-CS-239-Winter-2015/Part_B/Benchmark/closure-compiler/tools" />
  </properties>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testGlobalCatch" time="0.001">
    <error message="Missing catch or finally for try statement.. Reference node:&#xa;TRY 1 [source_file: testcode]&#xa;    BLOCK 1 [source_file: testcode]&#xa;    BLOCK 1 [source_file: testcode]&#xa;        CATCH 1 [source_file: testcode]&#xa;            NAME e 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                EXPR_RESULT 1 [source_file: testcode]&#xa;                    CALL 1 [free_call: 1] [source_file: testcode]&#xa;                        NAME foo 1 [source_file: testcode]&#xa;                        NAME e 1 [source_file: testcode]&#xa;" type="java.lang.IllegalStateException">java.lang.IllegalStateException: Missing catch or finally for try statement.. Reference node:
TRY 1 [source_file: testcode]
    BLOCK 1 [source_file: testcode]
    BLOCK 1 [source_file: testcode]
        CATCH 1 [source_file: testcode]
            NAME e 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                EXPR_RESULT 1 [source_file: testcode]
                    CALL 1 [free_call: 1] [source_file: testcode]
                        NAME foo 1 [source_file: testcode]
                        NAME e 1 [source_file: testcode]

	at com.google.javascript.jscomp.AstValidator$1.handleViolation(AstValidator.java:54)
	at com.google.javascript.jscomp.AstValidator.violation(AstValidator.java:1167)
	at com.google.javascript.jscomp.AstValidator.validateTry(AstValidator.java:888)
	at com.google.javascript.jscomp.AstValidator.validateStatement(AstValidator.java:142)
	at com.google.javascript.jscomp.AstValidator.validateScript(AstValidator.java:91)
	at com.google.javascript.jscomp.AstValidator.validateCodeRoot(AstValidator.java:82)
	at com.google.javascript.jscomp.AstValidator.validateRoot(AstValidator.java:75)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:967)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.OptimizeParametersTest.testGlobalCatch(OptimizeParametersTest.java:590)
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNoRemoval" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testSimpleRemoval" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNotAFunction" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveOneOptionalNamedFunction" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDifferentScopes" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:22&#xa;function f(a, b) {} f(1, 2); f(1, 3); function h() {function g(a) {} g(4); g(5);} f(1, 2);&#xa;  Parent(VAR): testcode:1:22&#xa;function f(a, b) {} f(1, 2); f(1, 3); function h() {function g(a) {} g(4); g(5);} f(1, 2);&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:22
function f(a, b) {} f(1, 2); f(1, 3); function h() {function g(a) {} g(4); g(5);} f(1, 2);
  Parent(VAR): testcode:1:22
function f(a, b) {} f(1, 2); f(1, 3); function h() {function g(a) {} g(4); g(5);} f(1, 2);

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testDifferentScopes(OptimizeParametersTest.java:60)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testOptimizeOnlyImmutableValues" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:24&#xa;function foo(a) {}; foo(undefined);&#xa;  Parent(VAR): testcode:1:24&#xa;function foo(a) {}; foo(undefined);&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:24
function foo(a) {}; foo(undefined);
  Parent(VAR): testcode:1:24
function foo(a) {}; foo(undefined);

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testOptimizeOnlyImmutableValues(OptimizeParametersTest.java:67)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveOneOptionalVarAssignment" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoOptimizeCall" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoOptimizeApply" time="0.007" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveOneOptionalExpressionAssign" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveOneOptionalOneRequired" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveOneOptionalMultipleCalls" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveOneOptionalMultiplePossibleDefinition" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveTwoOptionalMultiplePossibleDefinition" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testConstructorOptArgsNotRemoved" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMultipleUnknown" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testSingleUnknown" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveVarArg" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testAliasMethodsDontGetOptimize" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testAliasMethodsDontGetOptimize2" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testAliasMethodsDontGetOptimize3" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testAliasMethodsDontGetOptimize4" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMethodsDefinedInArraysDontGetOptimized" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMethodsDefinedInObjectDontGetOptimized" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRemoveConstantArgument" time="0.002">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name b is not annotated as constant.&#xa;  Node(NAME b): testcode:1:30&#xa;function foo(a,b,c){}; foo(1, 2, 3); foo(1, 2, 4); foo(2, 2, 3)&#xa;  Parent(VAR): testcode:1:30&#xa;function foo(a,b,c){}; foo(1, 2, 3); foo(1, 2, 4); foo(2, 2, 3)&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name b is not annotated as constant.
  Node(NAME b): testcode:1:30
function foo(a,b,c){}; foo(1, 2, 3); foo(1, 2, 4); foo(2, 2, 3)
  Parent(VAR): testcode:1:30
function foo(a,b,c){}; foo(1, 2, 3); foo(1, 2, 4); foo(2, 2, 3)

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testRemoveConstantArgument(OptimizeParametersTest.java:270)
Caused by: java.lang.IllegalStateException: The name b is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testCanDeleteArgumentsAtAnyPosition" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name b is not annotated as constant.&#xa;  Node(NAME b): testcode:1:33&#xa;function foo(a,b,c,d,e) {};foo(1,2,3,4,5);foo(2,2,4,4,5);&#xa;  Parent(VAR): testcode:1:33&#xa;function foo(a,b,c,d,e) {};foo(1,2,3,4,5);foo(2,2,4,4,5);&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name b is not annotated as constant.
  Node(NAME b): testcode:1:33
function foo(a,b,c,d,e) {};foo(1,2,3,4,5);foo(2,2,4,4,5);
  Parent(VAR): testcode:1:33
function foo(a,b,c,d,e) {};foo(1,2,3,4,5);foo(2,2,4,4,5);

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testCanDeleteArgumentsAtAnyPosition(OptimizeParametersTest.java:300)
Caused by: java.lang.IllegalStateException: The name b is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNoOptimizationForExternsFunctions" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNoOptimizationForGoogExportSymbol" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNoArgumentRemovalNonEqualNodes" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testFunctionPassedAsParam" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name b is not annotated as constant.&#xa;  Node(NAME b): testcode:1:176&#xa;/** @constructor */ function person(){}; person.prototype.run = function(a, b) {};person.prototype.walk = function() {};person.prototype.foo = function() { this.run(this.walk, 0.1)};person.foo();&#xa;  Parent(VAR): testcode:1:176&#xa;/** @constructor */ function person(){}; person.prototype.run = function(a, b) {};person.prototype.walk = function() {};person.prototype.foo = function() { this.run(this.walk, 0.1)};person.foo();&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name b is not annotated as constant.
  Node(NAME b): testcode:1:176
/** @constructor */ function person(){}; person.prototype.run = function(a, b) {};person.prototype.walk = function() {};person.prototype.foo = function() { this.run(this.walk, 0.1)};person.foo();
  Parent(VAR): testcode:1:176
/** @constructor */ function person(){}; person.prototype.run = function(a, b) {};person.prototype.walk = function() {};person.prototype.foo = function() { this.run(this.walk, 0.1)};person.foo();

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testFunctionPassedAsParam(OptimizeParametersTest.java:334)
Caused by: java.lang.IllegalStateException: The name b is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testCallIsIgnore" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testApplyIsIgnore" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testFunctionWithReferenceToArgumentsShouldNotBeOptimize" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testFunctionWithTwoNames" time="0.006" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRecursion" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:30&#xa;var foo = function (a,b) {foo(1, b)}; foo(1, 2)&#xa;  Parent(VAR): testcode:1:30&#xa;var foo = function (a,b) {foo(1, b)}; foo(1, 2)&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:30
var foo = function (a,b) {foo(1, b)}; foo(1, 2)
  Parent(VAR): testcode:1:30
var foo = function (a,b) {foo(1, b)}; foo(1, 2)

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testRecursion(OptimizeParametersTest.java:370)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testConstantArgumentsToConstructorCanBeOptimized" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:37&#xa;function foo(a) {};var bar = new foo(1);&#xa;  Parent(VAR): testcode:1:37&#xa;function foo(a) {};var bar = new foo(1);&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:37
function foo(a) {};var bar = new foo(1);
  Parent(VAR): testcode:1:37
function foo(a) {};var bar = new foo(1);

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testConstantArgumentsToConstructorCanBeOptimized(OptimizeParametersTest.java:379)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testOptionalArgumentsToConstructorCanBeOptimized" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testRegexesCanBeInlined" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:24&#xa;function foo(a) {}; foo(/abc/);&#xa;  Parent(VAR): testcode:1:24&#xa;function foo(a) {}; foo(/abc/);&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:24
function foo(a) {}; foo(/abc/);
  Parent(VAR): testcode:1:24
function foo(a) {}; foo(/abc/);

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testRegexesCanBeInlined(OptimizeParametersTest.java:391)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testConstructorUsedAsFunctionCanBeOptimized" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:37&#xa;function foo(a) {};var bar = new foo(1);foo(1);&#xa;  Parent(VAR): testcode:1:37&#xa;function foo(a) {};var bar = new foo(1);foo(1);&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:37
function foo(a) {};var bar = new foo(1);foo(1);
  Parent(VAR): testcode:1:37
function foo(a) {};var bar = new foo(1);foo(1);

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testConstructorUsedAsFunctionCanBeOptimized(OptimizeParametersTest.java:402)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoNotOptimizeConstructorWhenArgumentsAreNotEqual" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoNotOptimizeArrayElements" time="0.003" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testOptimizeThis" time="0.001">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:91&#xa;function foo() {var bar = function (a, b) {};this.bar = function (a, b) {};this.bar(3);bar(2);}&#xa;  Parent(VAR): testcode:1:91&#xa;function foo() {var bar = function (a, b) {};this.bar = function (a, b) {};this.bar(3);bar(2);}&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:91
function foo() {var bar = function (a, b) {};this.bar = function (a, b) {};this.bar(3);bar(2);}
  Parent(VAR): testcode:1:91
function foo() {var bar = function (a, b) {};this.bar = function (a, b) {};this.bar(3);bar(2);}

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testOptimizeThis(OptimizeParametersTest.java:435)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoNotOptimizeWhenArgumentsPassedAsParameter" time="0.002">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name b is not annotated as constant.&#xa;  Node(NAME b): testcode:1:38&#xa;function foo(a, b) {}; foo(arguments, 1)&#xa;  Parent(VAR): testcode:1:38&#xa;function foo(a, b) {}; foo(arguments, 1)&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name b is not annotated as constant.
  Node(NAME b): testcode:1:38
function foo(a, b) {}; foo(arguments, 1)
  Parent(VAR): testcode:1:38
function foo(a, b) {}; foo(arguments, 1)

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testDoNotOptimizeWhenArgumentsPassedAsParameter(OptimizeParametersTest.java:442)
Caused by: java.lang.IllegalStateException: The name b is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoNotOptimizeGoogExportFunctions" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoNotOptimizeJSCompiler_renameProperty" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testDoNotOptimizeJSCompiler_ObjectPropertyString" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMutableValues1" time="0.009" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMutableValues2" time="0.002" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMutableValues3" time="0.001" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMutableValues4" time="0.002">
    <failure message="&#xa;Expected: var x;var y;var z;function foo(p1,p2,p3){}foo(x,y(),z());foo(x,y(),3)&#xa;Result:   var x;var y;var z;function foo(p2,p3){var p1=x}foo(y(),z());foo(y(),3)&#xa;Node tree inequality:&#xa;Tree1:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME x 1 [is_constant_name: 1] [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME y 1 [is_constant_name: 1] [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME z 1 [is_constant_name: 1] [source_file: expected0]&#xa;        FUNCTION foo 1 [source_file: expected0]&#xa;            NAME foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;                NAME p1 1 [source_file: expected0]&#xa;                NAME p2 1 [source_file: expected0]&#xa;                NAME p3 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME foo 1 [source_file: expected0]&#xa;                NAME x 1 [is_constant_name: 1] [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME z 1 [is_constant_name: 1] [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            CALL 1 [free_call: 1] [source_file: expected0]&#xa;                NAME foo 1 [source_file: expected0]&#xa;                NAME x 1 [is_constant_name: 1] [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;&#xa;&#xa;Tree2:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME x 1 [is_constant_name: 1] [source_file: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME y 1 [is_constant_name: 1] [source_file: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME z 1 [is_constant_name: 1] [source_file: testcode]&#xa;        FUNCTION foo 1 [source_file: testcode]&#xa;            NAME foo 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;                NAME p2 1 [source_file: testcode]&#xa;                NAME p3 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                VAR 1 [source_file: testcode]&#xa;                    NAME p1 1 [source_file: testcode]&#xa;                        NAME x 1 [is_constant_name: 1] [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME foo 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME z 1 [is_constant_name: 1] [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            CALL 1 [free_call: 1] [source_file: testcode]&#xa;                NAME foo 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: testcode]&#xa;                NUMBER 3.0 1 [source_file: testcode]&#xa;&#xa;&#xa;Subtree1: PARAM_LIST 1 [source_file: expected0]&#xa;    NAME p1 1 [source_file: expected0]&#xa;    NAME p2 1 [source_file: expected0]&#xa;    NAME p3 1 [source_file: expected0]&#xa;&#xa;&#xa;Subtree2: PARAM_LIST 1 [source_file: testcode]&#xa;    NAME p2 1 [source_file: testcode]&#xa;    NAME p3 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var x;var y;var z;function foo(p1,p2,p3){}foo(x,y(),z());foo(x,y(),3)
Result:   var x;var y;var z;function foo(p2,p3){var p1=x}foo(y(),z());foo(y(),3)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME x 1 [is_constant_name: 1] [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME y 1 [is_constant_name: 1] [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME z 1 [is_constant_name: 1] [source_file: expected0]
        FUNCTION foo 1 [source_file: expected0]
            NAME foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME p1 1 [source_file: expected0]
                NAME p2 1 [source_file: expected0]
                NAME p3 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME foo 1 [source_file: expected0]
                NAME x 1 [is_constant_name: 1] [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME y 1 [is_constant_name: 1] [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME z 1 [is_constant_name: 1] [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            CALL 1 [free_call: 1] [source_file: expected0]
                NAME foo 1 [source_file: expected0]
                NAME x 1 [is_constant_name: 1] [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME y 1 [is_constant_name: 1] [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME x 1 [is_constant_name: 1] [source_file: testcode]
        VAR 1 [source_file: testcode]
            NAME y 1 [is_constant_name: 1] [source_file: testcode]
        VAR 1 [source_file: testcode]
            NAME z 1 [is_constant_name: 1] [source_file: testcode]
        FUNCTION foo 1 [source_file: testcode]
            NAME foo 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME p2 1 [source_file: testcode]
                NAME p3 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME p1 1 [source_file: testcode]
                        NAME x 1 [is_constant_name: 1] [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME foo 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME y 1 [is_constant_name: 1] [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME z 1 [is_constant_name: 1] [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            CALL 1 [free_call: 1] [source_file: testcode]
                NAME foo 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME y 1 [is_constant_name: 1] [source_file: testcode]
                NUMBER 3.0 1 [source_file: testcode]


Subtree1: PARAM_LIST 1 [source_file: expected0]
    NAME p1 1 [source_file: expected0]
    NAME p2 1 [source_file: expected0]
    NAME p3 1 [source_file: expected0]


Subtree2: PARAM_LIST 1 [source_file: testcode]
    NAME p2 1 [source_file: testcode]
    NAME p3 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.OptimizeParametersTest.testMutableValues4(OptimizeParametersTest.java:515)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testMutableValues5" time="0.003">
    <failure message="&#xa;Expected: var x;var y;var z;function foo(p1,p2,p3){}new foo(x,y(),z());new foo(x,y(),3)&#xa;Result:   var x;var y;var z;function foo(p2,p3){var p1=x}new foo(y(),z());new foo(y(),3)&#xa;Node tree inequality:&#xa;Tree1:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME x 1 [is_constant_name: 1] [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME y 1 [is_constant_name: 1] [source_file: expected0]&#xa;        VAR 1 [source_file: expected0]&#xa;            NAME z 1 [is_constant_name: 1] [source_file: expected0]&#xa;        FUNCTION foo 1 [source_file: expected0]&#xa;            NAME foo 1 [source_file: expected0]&#xa;            PARAM_LIST 1 [source_file: expected0]&#xa;                NAME p1 1 [source_file: expected0]&#xa;                NAME p2 1 [source_file: expected0]&#xa;                NAME p3 1 [source_file: expected0]&#xa;            BLOCK 1 [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME foo 1 [source_file: expected0]&#xa;                NAME x 1 [is_constant_name: 1] [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME z 1 [is_constant_name: 1] [source_file: expected0]&#xa;        EXPR_RESULT 1 [source_file: expected0]&#xa;            NEW 1 [source_file: expected0]&#xa;                NAME foo 1 [source_file: expected0]&#xa;                NAME x 1 [is_constant_name: 1] [source_file: expected0]&#xa;                CALL 1 [free_call: 1] [source_file: expected0]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: expected0]&#xa;                NUMBER 3.0 1 [source_file: expected0]&#xa;&#xa;&#xa;Tree2:&#xa;BLOCK [synthetic: 1]&#xa;    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME x 1 [is_constant_name: 1] [source_file: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME y 1 [is_constant_name: 1] [source_file: testcode]&#xa;        VAR 1 [source_file: testcode]&#xa;            NAME z 1 [is_constant_name: 1] [source_file: testcode]&#xa;        FUNCTION foo 1 [source_file: testcode]&#xa;            NAME foo 1 [source_file: testcode]&#xa;            PARAM_LIST 1 [source_file: testcode]&#xa;                NAME p2 1 [source_file: testcode]&#xa;                NAME p3 1 [source_file: testcode]&#xa;            BLOCK 1 [source_file: testcode]&#xa;                VAR 1 [source_file: testcode]&#xa;                    NAME p1 1 [source_file: testcode]&#xa;                        NAME x 1 [is_constant_name: 1] [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME foo 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME z 1 [is_constant_name: 1] [source_file: testcode]&#xa;        EXPR_RESULT 1 [source_file: testcode]&#xa;            NEW 1 [source_file: testcode]&#xa;                NAME foo 1 [source_file: testcode]&#xa;                CALL 1 [free_call: 1] [source_file: testcode]&#xa;                    NAME y 1 [is_constant_name: 1] [source_file: testcode]&#xa;                NUMBER 3.0 1 [source_file: testcode]&#xa;&#xa;&#xa;Subtree1: PARAM_LIST 1 [source_file: expected0]&#xa;    NAME p1 1 [source_file: expected0]&#xa;    NAME p2 1 [source_file: expected0]&#xa;    NAME p3 1 [source_file: expected0]&#xa;&#xa;&#xa;Subtree2: PARAM_LIST 1 [source_file: testcode]&#xa;    NAME p2 1 [source_file: testcode]&#xa;    NAME p3 1 [source_file: testcode]&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: 
Expected: var x;var y;var z;function foo(p1,p2,p3){}new foo(x,y(),z());new foo(x,y(),3)
Result:   var x;var y;var z;function foo(p2,p3){var p1=x}new foo(y(),z());new foo(y(),3)
Node tree inequality:
Tree1:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0]
        VAR 1 [source_file: expected0]
            NAME x 1 [is_constant_name: 1] [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME y 1 [is_constant_name: 1] [source_file: expected0]
        VAR 1 [source_file: expected0]
            NAME z 1 [is_constant_name: 1] [source_file: expected0]
        FUNCTION foo 1 [source_file: expected0]
            NAME foo 1 [source_file: expected0]
            PARAM_LIST 1 [source_file: expected0]
                NAME p1 1 [source_file: expected0]
                NAME p2 1 [source_file: expected0]
                NAME p3 1 [source_file: expected0]
            BLOCK 1 [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME foo 1 [source_file: expected0]
                NAME x 1 [is_constant_name: 1] [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME y 1 [is_constant_name: 1] [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME z 1 [is_constant_name: 1] [source_file: expected0]
        EXPR_RESULT 1 [source_file: expected0]
            NEW 1 [source_file: expected0]
                NAME foo 1 [source_file: expected0]
                NAME x 1 [is_constant_name: 1] [source_file: expected0]
                CALL 1 [free_call: 1] [source_file: expected0]
                    NAME y 1 [is_constant_name: 1] [source_file: expected0]
                NUMBER 3.0 1 [source_file: expected0]


Tree2:
BLOCK [synthetic: 1]
    SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode]
        VAR 1 [source_file: testcode]
            NAME x 1 [is_constant_name: 1] [source_file: testcode]
        VAR 1 [source_file: testcode]
            NAME y 1 [is_constant_name: 1] [source_file: testcode]
        VAR 1 [source_file: testcode]
            NAME z 1 [is_constant_name: 1] [source_file: testcode]
        FUNCTION foo 1 [source_file: testcode]
            NAME foo 1 [source_file: testcode]
            PARAM_LIST 1 [source_file: testcode]
                NAME p2 1 [source_file: testcode]
                NAME p3 1 [source_file: testcode]
            BLOCK 1 [source_file: testcode]
                VAR 1 [source_file: testcode]
                    NAME p1 1 [source_file: testcode]
                        NAME x 1 [is_constant_name: 1] [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME foo 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME y 1 [is_constant_name: 1] [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME z 1 [is_constant_name: 1] [source_file: testcode]
        EXPR_RESULT 1 [source_file: testcode]
            NEW 1 [source_file: testcode]
                NAME foo 1 [source_file: testcode]
                CALL 1 [free_call: 1] [source_file: testcode]
                    NAME y 1 [is_constant_name: 1] [source_file: testcode]
                NUMBER 3.0 1 [source_file: testcode]


Subtree1: PARAM_LIST 1 [source_file: expected0]
    NAME p1 1 [source_file: expected0]
    NAME p2 1 [source_file: expected0]
    NAME p3 1 [source_file: expected0]


Subtree2: PARAM_LIST 1 [source_file: testcode]
    NAME p2 1 [source_file: testcode]
    NAME p3 1 [source_file: testcode]

	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1161)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.CompilerTestCase.testSame(CompilerTestCase.java:741)
	at com.google.javascript.jscomp.OptimizeParametersTest.testMutableValues5(OptimizeParametersTest.java:553)
</failure>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testShadows" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testCrash" time="0.0">
    <error message="INTERNAL COMPILER ERROR.&#xa;Please report this problem.&#xa;&#xa;The name a is not annotated as constant.&#xa;  Node(NAME a): testcode:1:22&#xa;function foo(a) {}foo({o:1});foo({o:1})&#xa;  Parent(VAR): testcode:1:22&#xa;function foo(a) {}foo({o:1});foo({o:1})&#xa;" type="java.lang.RuntimeException">java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

The name a is not annotated as constant.
  Node(NAME a): testcode:1:22
function foo(a) {}foo({o:1});foo({o:1})
  Parent(VAR): testcode:1:22
function foo(a) {}foo({o:1});foo({o:1})

	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.visit(Normalize.java:321)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:576)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:610)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:562)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:570)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:308)
	at com.google.javascript.jscomp.NodeTraversal.traverseRoots(NodeTraversal.java:538)
	at com.google.javascript.jscomp.Normalize$VerifyConstants.process(Normalize.java:284)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:1063)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:935)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:543)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:509)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:450)
	at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:408)
	at com.google.javascript.jscomp.OptimizeParametersTest.testCrash(OptimizeParametersTest.java:580)
Caused by: java.lang.IllegalStateException: The name a is not annotated as constant.
</error>
  </testcase>
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNamelessParameter1" time="0.0" />
  <testcase classname="com.google.javascript.jscomp.OptimizeParametersTest" name="testNamelessParameter2" time="0.002" />
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
